
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.42+15 (git sha1 74a1dd99a, g++ 14.1.1 -Os)

-- Running command `read -sv ../1.hw/cic2.v ../1.hw/sd_dac_top.v ../1.hw/halfBandFirst.v ../1.hw/cic4.v ../1.hw/cic3.v ../1.hw/clk_divider.v ../1.hw/sigma_delta_modulator.v ../1.hw/cic1.v ../1.hw/interpolatingFilter.v ../1.hw/sine_wave_generator.v ../1.hw/halfBandSecond.v ../1.hw/inverseSinc.v; synth_gatemate -top sd_dac_top -nomx8 -vlog net/sd_dac_top_synth.v' --

1. Executing Verilog-2005 frontend: ../1.hw/cic2.v
Parsing SystemVerilog input from `../1.hw/cic2.v' to AST representation.
Storing AST representation for module `$abstract\cic2'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../1.hw/sd_dac_top.v
Parsing SystemVerilog input from `../1.hw/sd_dac_top.v' to AST representation.
Storing AST representation for module `$abstract\sd_dac_top'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../1.hw/halfBandFirst.v
Parsing SystemVerilog input from `../1.hw/halfBandFirst.v' to AST representation.
Storing AST representation for module `$abstract\halfBandFirst'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../1.hw/cic4.v
Parsing SystemVerilog input from `../1.hw/cic4.v' to AST representation.
Storing AST representation for module `$abstract\cic4'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../1.hw/cic3.v
Parsing SystemVerilog input from `../1.hw/cic3.v' to AST representation.
Storing AST representation for module `$abstract\cic3'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../1.hw/clk_divider.v
Parsing SystemVerilog input from `../1.hw/clk_divider.v' to AST representation.
Storing AST representation for module `$abstract\clk_divider'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: ../1.hw/sigma_delta_modulator.v
Parsing SystemVerilog input from `../1.hw/sigma_delta_modulator.v' to AST representation.
Storing AST representation for module `$abstract\sigma_delta_modulator'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: ../1.hw/cic1.v
Parsing SystemVerilog input from `../1.hw/cic1.v' to AST representation.
Storing AST representation for module `$abstract\cic1'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: ../1.hw/interpolatingFilter.v
Parsing SystemVerilog input from `../1.hw/interpolatingFilter.v' to AST representation.
Storing AST representation for module `$abstract\interpolatingFilter'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: ../1.hw/sine_wave_generator.v
Parsing SystemVerilog input from `../1.hw/sine_wave_generator.v' to AST representation.
Storing AST representation for module `$abstract\sine_wave_generator'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: ../1.hw/halfBandSecond.v
Parsing SystemVerilog input from `../1.hw/halfBandSecond.v' to AST representation.
Storing AST representation for module `$abstract\halfBandSecond'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: ../1.hw/inverseSinc.v
Parsing SystemVerilog input from `../1.hw/inverseSinc.v' to AST representation.
Storing AST representation for module `$abstract\inverseSinc'.
Successfully finished Verilog frontend.

13. Executing SYNTH_GATEMATE pass.

13.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/cells_sim.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\CC_IBUF'.
Generating RTLIL representation for module `\CC_OBUF'.
Generating RTLIL representation for module `\CC_TOBUF'.
Generating RTLIL representation for module `\CC_IOBUF'.
Generating RTLIL representation for module `\CC_LVDS_IBUF'.
Generating RTLIL representation for module `\CC_LVDS_OBUF'.
Generating RTLIL representation for module `\CC_LVDS_TOBUF'.
Generating RTLIL representation for module `\CC_LVDS_IOBUF'.
Generating RTLIL representation for module `\CC_IDDR'.
Generating RTLIL representation for module `\CC_ODDR'.
Generating RTLIL representation for module `\CC_DFF'.
Generating RTLIL representation for module `\CC_DLT'.
Generating RTLIL representation for module `\CC_LUT1'.
Generating RTLIL representation for module `\CC_LUT2'.
Generating RTLIL representation for module `\CC_LUT3'.
Generating RTLIL representation for module `\CC_LUT4'.
Generating RTLIL representation for module `\CC_MX2'.
Generating RTLIL representation for module `\CC_MX4'.
Generating RTLIL representation for module `\CC_MX8'.
Generating RTLIL representation for module `\CC_ADDF'.
Generating RTLIL representation for module `\CC_MULT'.
Generating RTLIL representation for module `\CC_BUFG'.
Generating RTLIL representation for module `\CC_BRAM_20K'.
Generating RTLIL representation for module `\CC_BRAM_40K'.
Generating RTLIL representation for module `\CC_FIFO_40K'.
Generating RTLIL representation for module `\CC_L2T4'.
Generating RTLIL representation for module `\CC_L2T5'.
Successfully finished Verilog frontend.

13.2. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/cells_bb.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\CC_PLL'.
Generating RTLIL representation for module `\CC_PLL_ADV'.
Generating RTLIL representation for module `\CC_SERDES'.
Generating RTLIL representation for module `\CC_CFG_CTRL'.
Generating RTLIL representation for module `\CC_USR_RSTN'.
Successfully finished Verilog frontend.

13.3. Executing HIERARCHY pass (managing design hierarchy).

13.4. Executing AST frontend in derive mode using pre-parsed AST for module `\sd_dac_top'.
Generating RTLIL representation for module `\sd_dac_top'.
../1.hw/sd_dac_top.v:23: Warning: Replacing floating point parameter pll_inst.REF_CLK = 10.000000 with string.
../1.hw/sd_dac_top.v:23: Warning: Replacing floating point parameter pll_inst.OUT_CLK = 5.644800 with string.

13.4.1. Analyzing design hierarchy..
Top module:  \sd_dac_top

13.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sigma_delta_modulator'.
Generating RTLIL representation for module `\sigma_delta_modulator'.

13.4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\interpolatingFilter'.
Generating RTLIL representation for module `\interpolatingFilter'.

13.4.4. Executing AST frontend in derive mode using pre-parsed AST for module `\sine_wave_generator'.
Generating RTLIL representation for module `\sine_wave_generator'.

13.4.5. Executing AST frontend in derive mode using pre-parsed AST for module `\clk_divider'.
Generating RTLIL representation for module `\clk_divider'.

13.4.6. Analyzing design hierarchy..
Top module:  \sd_dac_top
Used module:     \sigma_delta_modulator
Used module:     \interpolatingFilter
Used module:     \sine_wave_generator
Used module:     \clk_divider

13.4.7. Executing AST frontend in derive mode using pre-parsed AST for module `\cic4'.
Generating RTLIL representation for module `\cic4'.
Warning: Replacing memory \delay_pipeline with list of registers. See ../1.hw/cic4.v:127

13.4.8. Executing AST frontend in derive mode using pre-parsed AST for module `\cic3'.
Generating RTLIL representation for module `\cic3'.
Warning: Replacing memory \delay_pipeline with list of registers. See ../1.hw/cic3.v:127

13.4.9. Executing AST frontend in derive mode using pre-parsed AST for module `\cic2'.
Generating RTLIL representation for module `\cic2'.
Warning: Replacing memory \sumdelay_pipeline1 with list of registers. See ../1.hw/cic2.v:173
Warning: Replacing memory \delay_pipeline with list of registers. See ../1.hw/cic2.v:137

13.4.10. Executing AST frontend in derive mode using pre-parsed AST for module `\cic1'.
Generating RTLIL representation for module `\cic1'.
Warning: Replacing memory \sumdelay_pipeline1 with list of registers. See ../1.hw/cic1.v:173
Warning: Replacing memory \delay_pipeline with list of registers. See ../1.hw/cic1.v:137

13.4.11. Executing AST frontend in derive mode using pre-parsed AST for module `\inverseSinc'.
Generating RTLIL representation for module `\inverseSinc'.
Warning: Replacing memory \sumdelay_pipeline2 with list of registers. See ../1.hw/inverseSinc.v:243
Warning: Replacing memory \sumdelay_pipeline1 with list of registers. See ../1.hw/inverseSinc.v:218
Warning: Replacing memory \delay_pipeline with list of registers. See ../1.hw/inverseSinc.v:156

13.4.12. Analyzing design hierarchy..
Top module:  \sd_dac_top
Used module:     \sigma_delta_modulator
Used module:     \interpolatingFilter
Used module:         \cic4
Used module:         \cic3
Used module:         \cic2
Used module:         \cic1
Used module:         \inverseSinc
Used module:     \sine_wave_generator
Used module:     \clk_divider

13.4.13. Analyzing design hierarchy..
Top module:  \sd_dac_top
Used module:     \sigma_delta_modulator
Used module:     \interpolatingFilter
Used module:         \cic4
Used module:         \cic3
Used module:         \cic2
Used module:         \cic1
Used module:         \inverseSinc
Used module:     \sine_wave_generator
Used module:     \clk_divider
Removing unused module `$abstract\inverseSinc'.
Removing unused module `$abstract\halfBandSecond'.
Removing unused module `$abstract\sine_wave_generator'.
Removing unused module `$abstract\interpolatingFilter'.
Removing unused module `$abstract\cic1'.
Removing unused module `$abstract\sigma_delta_modulator'.
Removing unused module `$abstract\clk_divider'.
Removing unused module `$abstract\cic3'.
Removing unused module `$abstract\cic4'.
Removing unused module `$abstract\halfBandFirst'.
Removing unused module `$abstract\sd_dac_top'.
Removing unused module `$abstract\cic2'.
Removed 12 unused modules.
Warning: Resizing cell port interpolatingFilter.filter3.filter_in from 16 bits to 20 bits.

13.5. Executing PROC pass (convert processes to netlists).

13.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

13.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../1.hw/inverseSinc.v:265$431 in module inverseSinc.
Marked 1 switch rules as full_case in process $proc$../1.hw/inverseSinc.v:240$398 in module inverseSinc.
Marked 1 switch rules as full_case in process $proc$../1.hw/inverseSinc.v:215$394 in module inverseSinc.
Marked 1 switch rules as full_case in process $proc$../1.hw/inverseSinc.v:153$370 in module inverseSinc.
Marked 2 switch rules as full_case in process $proc$../1.hw/inverseSinc.v:132$361 in module inverseSinc.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic1.v:195$357 in module cic1.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic1.v:170$324 in module cic1.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic1.v:134$311 in module cic1.
Marked 2 switch rules as full_case in process $proc$../1.hw/cic1.v:113$302 in module cic1.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic2.v:195$298 in module cic2.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic2.v:170$265 in module cic2.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic2.v:134$252 in module cic2.
Marked 2 switch rules as full_case in process $proc$../1.hw/cic2.v:113$243 in module cic2.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic3.v:155$240 in module cic3.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic3.v:124$213 in module cic3.
Marked 2 switch rules as full_case in process $proc$../1.hw/cic3.v:103$204 in module cic3.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic4.v:155$201 in module cic4.
Marked 1 switch rules as full_case in process $proc$../1.hw/cic4.v:124$174 in module cic4.
Marked 2 switch rules as full_case in process $proc$../1.hw/cic4.v:103$165 in module cic4.
Marked 2 switch rules as full_case in process $proc$../1.hw/clk_divider.v:9$161 in module clk_divider.
Marked 1 switch rules as full_case in process $proc$../1.hw/sine_wave_generator.v:59$67 in module sine_wave_generator.
Marked 1 switch rules as full_case in process $proc$../1.hw/sigma_delta_modulator.v:16$14 in module sigma_delta_modulator.
Removed a total of 0 dead cases.

13.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 53 assignments to connections.

13.5.4. Executing PROC_INIT pass (extract init attributes).

13.5.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\inverseSinc.$proc$../1.hw/inverseSinc.v:265$431'.
Found async reset \reset in `\inverseSinc.$proc$../1.hw/inverseSinc.v:240$398'.
Found async reset \reset in `\inverseSinc.$proc$../1.hw/inverseSinc.v:215$394'.
Found async reset \reset in `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
Found async reset \reset in `\inverseSinc.$proc$../1.hw/inverseSinc.v:132$361'.
Found async reset \reset in `\cic1.$proc$../1.hw/cic1.v:195$357'.
Found async reset \reset in `\cic1.$proc$../1.hw/cic1.v:170$324'.
Found async reset \reset in `\cic1.$proc$../1.hw/cic1.v:134$311'.
Found async reset \reset in `\cic1.$proc$../1.hw/cic1.v:113$302'.
Found async reset \reset in `\cic2.$proc$../1.hw/cic2.v:195$298'.
Found async reset \reset in `\cic2.$proc$../1.hw/cic2.v:170$265'.
Found async reset \reset in `\cic2.$proc$../1.hw/cic2.v:134$252'.
Found async reset \reset in `\cic2.$proc$../1.hw/cic2.v:113$243'.
Found async reset \reset in `\cic3.$proc$../1.hw/cic3.v:155$240'.
Found async reset \reset in `\cic3.$proc$../1.hw/cic3.v:124$213'.
Found async reset \reset in `\cic3.$proc$../1.hw/cic3.v:103$204'.
Found async reset \reset in `\cic4.$proc$../1.hw/cic4.v:155$201'.
Found async reset \reset in `\cic4.$proc$../1.hw/cic4.v:124$174'.
Found async reset \reset in `\cic4.$proc$../1.hw/cic4.v:103$165'.
Found async reset \reset in `\clk_divider.$proc$../1.hw/clk_divider.v:9$161'.
Found async reset \reset in `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:59$67'.
Found async reset \reset in `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.

13.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~25 debug messages>

13.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\inverseSinc.$proc$../1.hw/inverseSinc.v:0$434'.
Creating decoders for process `\inverseSinc.$proc$../1.hw/inverseSinc.v:265$431'.
     1/1: $0\output_register[17:0]
Creating decoders for process `\inverseSinc.$proc$../1.hw/inverseSinc.v:240$398'.
     1/2: $0\sumdelay_pipeline2[1][38:0]
     2/2: $0\sumdelay_pipeline2[0][38:0]
Creating decoders for process `\inverseSinc.$proc$../1.hw/inverseSinc.v:215$394'.
     1/3: $0\sumdelay_pipeline1[2][38:0]
     2/3: $0\sumdelay_pipeline1[1][38:0]
     3/3: $0\sumdelay_pipeline1[0][38:0]
Creating decoders for process `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
     1/6: $0\delay_pipeline[5][19:0]
     2/6: $0\delay_pipeline[4][19:0]
     3/6: $0\delay_pipeline[3][19:0]
     4/6: $0\delay_pipeline[2][19:0]
     5/6: $0\delay_pipeline[1][19:0]
     6/6: $0\delay_pipeline[0][19:0]
Creating decoders for process `\inverseSinc.$proc$../1.hw/inverseSinc.v:132$361'.
     1/1: $0\cur_count[1:0]
Creating decoders for process `\cic1.$proc$../1.hw/cic1.v:0$360'.
Creating decoders for process `\cic1.$proc$../1.hw/cic1.v:195$357'.
     1/1: $0\output_register[18:0]
Creating decoders for process `\cic1.$proc$../1.hw/cic1.v:170$324'.
     1/2: $0\sumdelay_pipeline1[1][35:0]
     2/2: $0\sumdelay_pipeline1[0][35:0]
Creating decoders for process `\cic1.$proc$../1.hw/cic1.v:134$311'.
     1/3: $0\delay_pipeline[2][17:0]
     2/3: $0\delay_pipeline[1][17:0]
     3/3: $0\delay_pipeline[0][17:0]
Creating decoders for process `\cic1.$proc$../1.hw/cic1.v:113$302'.
     1/1: $0\cur_count[1:0]
Creating decoders for process `\cic2.$proc$../1.hw/cic2.v:0$301'.
Creating decoders for process `\cic2.$proc$../1.hw/cic2.v:195$298'.
     1/1: $0\output_register[17:0]
Creating decoders for process `\cic2.$proc$../1.hw/cic2.v:170$265'.
     1/2: $0\sumdelay_pipeline1[1][36:0]
     2/2: $0\sumdelay_pipeline1[0][36:0]
Creating decoders for process `\cic2.$proc$../1.hw/cic2.v:134$252'.
     1/3: $0\delay_pipeline[2][18:0]
     2/3: $0\delay_pipeline[1][18:0]
     3/3: $0\delay_pipeline[0][18:0]
Creating decoders for process `\cic2.$proc$../1.hw/cic2.v:113$243'.
     1/1: $0\cur_count[1:0]
Creating decoders for process `\cic3.$proc$../1.hw/cic3.v:155$240'.
     1/1: $0\output_register[16:0]
Creating decoders for process `\cic3.$proc$../1.hw/cic3.v:124$213'.
     1/2: $0\delay_pipeline[1][17:0]
     2/2: $0\delay_pipeline[0][17:0]
Creating decoders for process `\cic3.$proc$../1.hw/cic3.v:103$204'.
     1/1: $0\cur_count[1:0]
Creating decoders for process `\cic4.$proc$../1.hw/cic4.v:155$201'.
     1/1: $0\output_register[15:0]
Creating decoders for process `\cic4.$proc$../1.hw/cic4.v:124$174'.
     1/2: $0\delay_pipeline[1][16:0]
     2/2: $0\delay_pipeline[0][16:0]
Creating decoders for process `\cic4.$proc$../1.hw/cic4.v:103$165'.
     1/1: $0\cur_count[1:0]
Creating decoders for process `\clk_divider.$proc$../1.hw/clk_divider.v:9$161'.
     1/2: $0\counter[6:0]
     2/2: $0\clk_out[0:0]
Creating decoders for process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
Creating decoders for process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:59$67'.
     1/2: $0\index[5:0]
     2/2: $0\sine_out[15:0]
Creating decoders for process `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
     1/6: $0\out[0:0]
     2/6: $0\integrator2[17:0]
     3/6: $0\diff2[15:0]
     4/6: $0\integrator1[17:0]
     5/6: $0\diff1[15:0]
     6/6: $0\comparator[17:0]

13.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\inverseSinc.\sumvector1[0]' from process `\inverseSinc.$proc$../1.hw/inverseSinc.v:0$434'.
No latch inferred for signal `\inverseSinc.\sumvector1[1]' from process `\inverseSinc.$proc$../1.hw/inverseSinc.v:0$434'.
No latch inferred for signal `\inverseSinc.\sumvector1[2]' from process `\inverseSinc.$proc$../1.hw/inverseSinc.v:0$434'.
No latch inferred for signal `\inverseSinc.\sumvector2[0]' from process `\inverseSinc.$proc$../1.hw/inverseSinc.v:0$434'.
No latch inferred for signal `\inverseSinc.\sumvector2[1]' from process `\inverseSinc.$proc$../1.hw/inverseSinc.v:0$434'.
No latch inferred for signal `\cic1.\sumvector1[0]' from process `\cic1.$proc$../1.hw/cic1.v:0$360'.
No latch inferred for signal `\cic1.\sumvector1[1]' from process `\cic1.$proc$../1.hw/cic1.v:0$360'.
No latch inferred for signal `\cic2.\sumvector1[0]' from process `\cic2.$proc$../1.hw/cic2.v:0$301'.
No latch inferred for signal `\cic2.\sumvector1[1]' from process `\cic2.$proc$../1.hw/cic2.v:0$301'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:13$23_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:14$24_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:15$25_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:16$26_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:17$27_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:18$28_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:19$29_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:20$30_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:21$31_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:22$32_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:23$33_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:24$34_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:25$35_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:26$36_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:27$37_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:28$38_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:29$39_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:30$40_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:31$41_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:32$42_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:33$43_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:34$44_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:35$45_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:36$46_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:37$47_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:38$48_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:39$49_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:40$50_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:41$51_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:42$52_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:43$53_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:44$54_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:45$55_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:46$56_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:47$57_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:48$58_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:49$59_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:50$60_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:51$61_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:52$62_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:53$63_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:54$64_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:55$65_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
No latch inferred for signal `\sine_wave_generator.$memwr$\sine_LUT$../1.hw/sine_wave_generator.v:56$66_EN' from process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.

13.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\inverseSinc.\output_register' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:265$431'.
  created $adff cell `$procdff$538' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\sumdelay_pipeline2[0]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:240$398'.
  created $adff cell `$procdff$539' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\sumdelay_pipeline2[1]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:240$398'.
  created $adff cell `$procdff$540' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\sumdelay_pipeline1[0]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:215$394'.
  created $adff cell `$procdff$541' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\sumdelay_pipeline1[1]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:215$394'.
  created $adff cell `$procdff$542' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\sumdelay_pipeline1[2]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:215$394'.
  created $adff cell `$procdff$543' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\delay_pipeline[0]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
  created $adff cell `$procdff$544' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\delay_pipeline[1]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
  created $adff cell `$procdff$545' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\delay_pipeline[2]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
  created $adff cell `$procdff$546' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\delay_pipeline[3]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
  created $adff cell `$procdff$547' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\delay_pipeline[4]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
  created $adff cell `$procdff$548' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\delay_pipeline[5]' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
  created $adff cell `$procdff$549' with positive edge clock and positive level reset.
Creating register for signal `\inverseSinc.\cur_count' using process `\inverseSinc.$proc$../1.hw/inverseSinc.v:132$361'.
  created $adff cell `$procdff$550' with positive edge clock and positive level reset.
Creating register for signal `\cic1.\output_register' using process `\cic1.$proc$../1.hw/cic1.v:195$357'.
  created $adff cell `$procdff$551' with positive edge clock and positive level reset.
Creating register for signal `\cic1.\sumdelay_pipeline1[0]' using process `\cic1.$proc$../1.hw/cic1.v:170$324'.
  created $adff cell `$procdff$552' with positive edge clock and positive level reset.
Creating register for signal `\cic1.\sumdelay_pipeline1[1]' using process `\cic1.$proc$../1.hw/cic1.v:170$324'.
  created $adff cell `$procdff$553' with positive edge clock and positive level reset.
Creating register for signal `\cic1.\delay_pipeline[0]' using process `\cic1.$proc$../1.hw/cic1.v:134$311'.
  created $adff cell `$procdff$554' with positive edge clock and positive level reset.
Creating register for signal `\cic1.\delay_pipeline[1]' using process `\cic1.$proc$../1.hw/cic1.v:134$311'.
  created $adff cell `$procdff$555' with positive edge clock and positive level reset.
Creating register for signal `\cic1.\delay_pipeline[2]' using process `\cic1.$proc$../1.hw/cic1.v:134$311'.
  created $adff cell `$procdff$556' with positive edge clock and positive level reset.
Creating register for signal `\cic1.\cur_count' using process `\cic1.$proc$../1.hw/cic1.v:113$302'.
  created $adff cell `$procdff$557' with positive edge clock and positive level reset.
Creating register for signal `\cic2.\output_register' using process `\cic2.$proc$../1.hw/cic2.v:195$298'.
  created $adff cell `$procdff$558' with positive edge clock and positive level reset.
Creating register for signal `\cic2.\sumdelay_pipeline1[0]' using process `\cic2.$proc$../1.hw/cic2.v:170$265'.
  created $adff cell `$procdff$559' with positive edge clock and positive level reset.
Creating register for signal `\cic2.\sumdelay_pipeline1[1]' using process `\cic2.$proc$../1.hw/cic2.v:170$265'.
  created $adff cell `$procdff$560' with positive edge clock and positive level reset.
Creating register for signal `\cic2.\delay_pipeline[0]' using process `\cic2.$proc$../1.hw/cic2.v:134$252'.
  created $adff cell `$procdff$561' with positive edge clock and positive level reset.
Creating register for signal `\cic2.\delay_pipeline[1]' using process `\cic2.$proc$../1.hw/cic2.v:134$252'.
  created $adff cell `$procdff$562' with positive edge clock and positive level reset.
Creating register for signal `\cic2.\delay_pipeline[2]' using process `\cic2.$proc$../1.hw/cic2.v:134$252'.
  created $adff cell `$procdff$563' with positive edge clock and positive level reset.
Creating register for signal `\cic2.\cur_count' using process `\cic2.$proc$../1.hw/cic2.v:113$243'.
  created $adff cell `$procdff$564' with positive edge clock and positive level reset.
Creating register for signal `\cic3.\output_register' using process `\cic3.$proc$../1.hw/cic3.v:155$240'.
  created $adff cell `$procdff$565' with positive edge clock and positive level reset.
Creating register for signal `\cic3.\delay_pipeline[0]' using process `\cic3.$proc$../1.hw/cic3.v:124$213'.
  created $adff cell `$procdff$566' with positive edge clock and positive level reset.
Creating register for signal `\cic3.\delay_pipeline[1]' using process `\cic3.$proc$../1.hw/cic3.v:124$213'.
  created $adff cell `$procdff$567' with positive edge clock and positive level reset.
Creating register for signal `\cic3.\cur_count' using process `\cic3.$proc$../1.hw/cic3.v:103$204'.
  created $adff cell `$procdff$568' with positive edge clock and positive level reset.
Creating register for signal `\cic4.\output_register' using process `\cic4.$proc$../1.hw/cic4.v:155$201'.
  created $adff cell `$procdff$569' with positive edge clock and positive level reset.
Creating register for signal `\cic4.\delay_pipeline[0]' using process `\cic4.$proc$../1.hw/cic4.v:124$174'.
  created $adff cell `$procdff$570' with positive edge clock and positive level reset.
Creating register for signal `\cic4.\delay_pipeline[1]' using process `\cic4.$proc$../1.hw/cic4.v:124$174'.
  created $adff cell `$procdff$571' with positive edge clock and positive level reset.
Creating register for signal `\cic4.\cur_count' using process `\cic4.$proc$../1.hw/cic4.v:103$165'.
  created $adff cell `$procdff$572' with positive edge clock and positive level reset.
Creating register for signal `\clk_divider.\clk_out' using process `\clk_divider.$proc$../1.hw/clk_divider.v:9$161'.
  created $adff cell `$procdff$573' with positive edge clock and positive level reset.
Creating register for signal `\clk_divider.\counter' using process `\clk_divider.$proc$../1.hw/clk_divider.v:9$161'.
  created $adff cell `$procdff$574' with positive edge clock and positive level reset.
Creating register for signal `\sine_wave_generator.\sine_out' using process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:59$67'.
  created $adff cell `$procdff$575' with positive edge clock and positive level reset.
Creating register for signal `\sine_wave_generator.\index' using process `\sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:59$67'.
  created $adff cell `$procdff$576' with positive edge clock and positive level reset.
Creating register for signal `\sigma_delta_modulator.\out' using process `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
  created $adff cell `$procdff$577' with positive edge clock and positive level reset.
Creating register for signal `\sigma_delta_modulator.\integrator1' using process `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
  created $adff cell `$procdff$578' with positive edge clock and positive level reset.
Creating register for signal `\sigma_delta_modulator.\integrator2' using process `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
  created $adff cell `$procdff$579' with positive edge clock and positive level reset.
Creating register for signal `\sigma_delta_modulator.\diff1' using process `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
  created $adff cell `$procdff$580' with positive edge clock and positive level reset.
Creating register for signal `\sigma_delta_modulator.\diff2' using process `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
  created $adff cell `$procdff$581' with positive edge clock and positive level reset.
Creating register for signal `\sigma_delta_modulator.\comparator' using process `\sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
  created $adff cell `$procdff$582' with positive edge clock and positive level reset.

13.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

13.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `inverseSinc.$proc$../1.hw/inverseSinc.v:0$434'.
Found and cleaned up 1 empty switch in `\inverseSinc.$proc$../1.hw/inverseSinc.v:265$431'.
Removing empty process `inverseSinc.$proc$../1.hw/inverseSinc.v:265$431'.
Found and cleaned up 1 empty switch in `\inverseSinc.$proc$../1.hw/inverseSinc.v:240$398'.
Removing empty process `inverseSinc.$proc$../1.hw/inverseSinc.v:240$398'.
Found and cleaned up 1 empty switch in `\inverseSinc.$proc$../1.hw/inverseSinc.v:215$394'.
Removing empty process `inverseSinc.$proc$../1.hw/inverseSinc.v:215$394'.
Found and cleaned up 1 empty switch in `\inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
Removing empty process `inverseSinc.$proc$../1.hw/inverseSinc.v:153$370'.
Found and cleaned up 2 empty switches in `\inverseSinc.$proc$../1.hw/inverseSinc.v:132$361'.
Removing empty process `inverseSinc.$proc$../1.hw/inverseSinc.v:132$361'.
Removing empty process `cic1.$proc$../1.hw/cic1.v:0$360'.
Found and cleaned up 1 empty switch in `\cic1.$proc$../1.hw/cic1.v:195$357'.
Removing empty process `cic1.$proc$../1.hw/cic1.v:195$357'.
Found and cleaned up 1 empty switch in `\cic1.$proc$../1.hw/cic1.v:170$324'.
Removing empty process `cic1.$proc$../1.hw/cic1.v:170$324'.
Found and cleaned up 1 empty switch in `\cic1.$proc$../1.hw/cic1.v:134$311'.
Removing empty process `cic1.$proc$../1.hw/cic1.v:134$311'.
Found and cleaned up 2 empty switches in `\cic1.$proc$../1.hw/cic1.v:113$302'.
Removing empty process `cic1.$proc$../1.hw/cic1.v:113$302'.
Removing empty process `cic2.$proc$../1.hw/cic2.v:0$301'.
Found and cleaned up 1 empty switch in `\cic2.$proc$../1.hw/cic2.v:195$298'.
Removing empty process `cic2.$proc$../1.hw/cic2.v:195$298'.
Found and cleaned up 1 empty switch in `\cic2.$proc$../1.hw/cic2.v:170$265'.
Removing empty process `cic2.$proc$../1.hw/cic2.v:170$265'.
Found and cleaned up 1 empty switch in `\cic2.$proc$../1.hw/cic2.v:134$252'.
Removing empty process `cic2.$proc$../1.hw/cic2.v:134$252'.
Found and cleaned up 2 empty switches in `\cic2.$proc$../1.hw/cic2.v:113$243'.
Removing empty process `cic2.$proc$../1.hw/cic2.v:113$243'.
Found and cleaned up 1 empty switch in `\cic3.$proc$../1.hw/cic3.v:155$240'.
Removing empty process `cic3.$proc$../1.hw/cic3.v:155$240'.
Found and cleaned up 1 empty switch in `\cic3.$proc$../1.hw/cic3.v:124$213'.
Removing empty process `cic3.$proc$../1.hw/cic3.v:124$213'.
Found and cleaned up 2 empty switches in `\cic3.$proc$../1.hw/cic3.v:103$204'.
Removing empty process `cic3.$proc$../1.hw/cic3.v:103$204'.
Found and cleaned up 1 empty switch in `\cic4.$proc$../1.hw/cic4.v:155$201'.
Removing empty process `cic4.$proc$../1.hw/cic4.v:155$201'.
Found and cleaned up 1 empty switch in `\cic4.$proc$../1.hw/cic4.v:124$174'.
Removing empty process `cic4.$proc$../1.hw/cic4.v:124$174'.
Found and cleaned up 2 empty switches in `\cic4.$proc$../1.hw/cic4.v:103$165'.
Removing empty process `cic4.$proc$../1.hw/cic4.v:103$165'.
Found and cleaned up 1 empty switch in `\clk_divider.$proc$../1.hw/clk_divider.v:9$161'.
Removing empty process `clk_divider.$proc$../1.hw/clk_divider.v:9$161'.
Removing empty process `sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:0$116'.
Removing empty process `sine_wave_generator.$proc$../1.hw/sine_wave_generator.v:59$67'.
Removing empty process `sigma_delta_modulator.$proc$../1.hw/sigma_delta_modulator.v:16$14'.
Cleaned up 25 empty switches.

13.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module inverseSinc.
<suppressed ~34 debug messages>
Optimizing module cic1.
<suppressed ~25 debug messages>
Optimizing module cic2.
<suppressed ~24 debug messages>
Optimizing module cic3.
<suppressed ~16 debug messages>
Optimizing module cic4.
<suppressed ~16 debug messages>
Optimizing module clk_divider.
Optimizing module sine_wave_generator.
Optimizing module interpolatingFilter.
Optimizing module sigma_delta_modulator.
<suppressed ~2 debug messages>
Optimizing module sd_dac_top.

13.6. Executing FLATTEN pass (flatten design).
Deleting now unused module inverseSinc.
Deleting now unused module cic1.
Deleting now unused module cic2.
Deleting now unused module cic3.
Deleting now unused module cic4.
Deleting now unused module clk_divider.
Deleting now unused module sine_wave_generator.
Deleting now unused module interpolatingFilter.
Deleting now unused module sigma_delta_modulator.
<suppressed ~9 debug messages>

13.7. Executing TRIBUF pass.

13.8. Executing DEMINOUT pass (demote inout ports to input or output).

13.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.
<suppressed ~4 debug messages>

13.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 3 unused cells and 314 unused wires.
<suppressed ~8 debug messages>

13.11. Executing CHECK pass (checking for obvious problems).
Checking module sd_dac_top...
Found and reported 0 problems.

13.12. Executing OPT pass (performing simple optimizations).

13.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
<suppressed ~57 debug messages>
Removed a total of 19 cells.

13.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~64 debug messages>

13.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

13.12.6. Executing OPT_DFF pass (perform DFF optimizations).

13.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 0 unused cells and 23 unused wires.
<suppressed ~4 debug messages>

13.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.12.9. Rerunning OPT passes. (Maybe there is more to do..)

13.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

13.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.12.13. Executing OPT_DFF pass (perform DFF optimizations).

13.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.12.16. Finished OPT passes. (There is nothing left to do.)

13.13. Executing FSM pass (extract and optimize FSM).

13.13.1. Executing FSM_DETECT pass (finding FSMs in design).

13.13.2. Executing FSM_EXTRACT pass (extracting FSM from design).

13.13.3. Executing FSM_OPT pass (simple optimizations of FSMs).

13.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.13.5. Executing FSM_OPT pass (simple optimizations of FSMs).

13.13.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

13.13.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

13.13.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

13.14. Executing OPT pass (performing simple optimizations).

13.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~63 debug messages>

13.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\u_interpolatingFilter.\filter7.$procdff$571 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter7.delay_pipeline[0], Q = \u_interpolatingFilter.filter7.delay_pipeline[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter7.$procdff$570 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter6.output_register, Q = \u_interpolatingFilter.filter7.delay_pipeline[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter6.$procdff$568 ($adff) from module sd_dac_top (D = $flatten\u_interpolatingFilter.\filter6.$procmux$517_Y, Q = \u_interpolatingFilter.filter6.cur_count).
Adding EN signal on $flatten\u_interpolatingFilter.\filter6.$procdff$567 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter6.delay_pipeline[0], Q = \u_interpolatingFilter.filter6.delay_pipeline[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter6.$procdff$566 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter5.output_register, Q = \u_interpolatingFilter.filter6.delay_pipeline[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter6.$procdff$565 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter6.output_typeconvert, Q = \u_interpolatingFilter.filter6.output_register).
Adding EN signal on $flatten\u_interpolatingFilter.\filter5.$procdff$564 ($adff) from module sd_dac_top (D = $flatten\u_interpolatingFilter.\filter5.$procmux$506_Y, Q = \u_interpolatingFilter.filter5.cur_count).
Adding EN signal on $flatten\u_interpolatingFilter.\filter5.$procdff$563 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter5.delay_pipeline[1], Q = \u_interpolatingFilter.filter5.delay_pipeline[2]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter5.$procdff$562 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter5.delay_pipeline[0], Q = \u_interpolatingFilter.filter5.delay_pipeline[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter5.$procdff$561 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter4.output_register, Q = \u_interpolatingFilter.filter5.delay_pipeline[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter5.$procdff$560 ($adff) from module sd_dac_top (D = { \u_interpolatingFilter.filter5.product_2 [34] \u_interpolatingFilter.filter5.product_2 [34] \u_interpolatingFilter.filter5.product_2 }, Q = \u_interpolatingFilter.filter5.sumdelay_pipeline1[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter5.$procdff$559 ($adff) from module sd_dac_top (D = { \u_interpolatingFilter.filter5.add_temp [35] \u_interpolatingFilter.filter5.add_temp }, Q = \u_interpolatingFilter.filter5.sumdelay_pipeline1[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter5.$procdff$558 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter5.output_typeconvert, Q = \u_interpolatingFilter.filter5.output_register).
Adding EN signal on $flatten\u_interpolatingFilter.\filter4.$procdff$557 ($adff) from module sd_dac_top (D = $flatten\u_interpolatingFilter.\filter4.$procmux$489_Y, Q = \u_interpolatingFilter.filter4.cur_count).
Adding EN signal on $flatten\u_interpolatingFilter.\filter4.$procdff$556 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter4.delay_pipeline[1], Q = \u_interpolatingFilter.filter4.delay_pipeline[2]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter4.$procdff$555 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter4.delay_pipeline[0], Q = \u_interpolatingFilter.filter4.delay_pipeline[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter4.$procdff$554 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.output_register, Q = \u_interpolatingFilter.filter4.delay_pipeline[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter4.$procdff$553 ($adff) from module sd_dac_top (D = { \u_interpolatingFilter.filter4.product_2 [33] \u_interpolatingFilter.filter4.product_2 [33] \u_interpolatingFilter.filter4.product_2 }, Q = \u_interpolatingFilter.filter4.sumdelay_pipeline1[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter4.$procdff$552 ($adff) from module sd_dac_top (D = { \u_interpolatingFilter.filter4.add_temp [34] \u_interpolatingFilter.filter4.add_temp }, Q = \u_interpolatingFilter.filter4.sumdelay_pipeline1[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter4.$procdff$551 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter4.output_typeconvert, Q = \u_interpolatingFilter.filter4.output_register).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$550 ($adff) from module sd_dac_top (D = $flatten\u_interpolatingFilter.\filter3.$procmux$472_Y, Q = \u_interpolatingFilter.filter3.cur_count).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$549 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.delay_pipeline[4], Q = \u_interpolatingFilter.filter3.delay_pipeline[5]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$548 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.delay_pipeline[3], Q = \u_interpolatingFilter.filter3.delay_pipeline[4]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$547 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.delay_pipeline[2], Q = \u_interpolatingFilter.filter3.delay_pipeline[3]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$546 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.delay_pipeline[1], Q = \u_interpolatingFilter.filter3.delay_pipeline[2]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$545 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.delay_pipeline[0], Q = \u_interpolatingFilter.filter3.delay_pipeline[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$544 ($adff) from module sd_dac_top (D = { \u_sine_wave_generator.sine_out [15] \u_sine_wave_generator.sine_out [15] \u_sine_wave_generator.sine_out [15] \u_sine_wave_generator.sine_out [15] \u_sine_wave_generator.sine_out }, Q = \u_interpolatingFilter.filter3.delay_pipeline[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$543 ($adff) from module sd_dac_top (D = { \u_interpolatingFilter.filter3.add_temp_2 [36] \u_interpolatingFilter.filter3.add_temp_2 [36] \u_interpolatingFilter.filter3.add_temp_2 }, Q = \u_interpolatingFilter.filter3.sumdelay_pipeline1[2]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$542 ($adff) from module sd_dac_top (D = { \u_interpolatingFilter.filter3.add_temp_1 [36] \u_interpolatingFilter.filter3.add_temp_1 [36] \u_interpolatingFilter.filter3.add_temp_1 }, Q = \u_interpolatingFilter.filter3.sumdelay_pipeline1[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$541 ($adff) from module sd_dac_top (D = { \u_interpolatingFilter.filter3.add_temp [36] \u_interpolatingFilter.filter3.add_temp [36] \u_interpolatingFilter.filter3.add_temp }, Q = \u_interpolatingFilter.filter3.sumdelay_pipeline1[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$540 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.sumdelay_pipeline1[2], Q = \u_interpolatingFilter.filter3.sumdelay_pipeline2[1]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$539 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.sumvector2[0], Q = \u_interpolatingFilter.filter3.sumdelay_pipeline2[0]).
Adding EN signal on $flatten\u_interpolatingFilter.\filter3.$procdff$538 ($adff) from module sd_dac_top (D = \u_interpolatingFilter.filter3.output_typeconvert, Q = \u_interpolatingFilter.filter3.output_register).
Adding EN signal on $flatten\u_clk_divider.$procdff$573 ($adff) from module sd_dac_top (D = $flatten\u_clk_divider.$not$../1.hw/clk_divider.v:15$163_Y, Q = \u_clk_divider.clk_out).

13.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 34 unused cells and 34 unused wires.
<suppressed ~35 debug messages>

13.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.14.9. Rerunning OPT passes. (Maybe there is more to do..)

13.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

13.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.14.13. Executing OPT_DFF pass (perform DFF optimizations).

13.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.14.16. Finished OPT passes. (There is nothing left to do.)

13.15. Executing WREDUCE pass (reducing word size of cells).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:13$72 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:14$73 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:15$74 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:16$75 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:17$76 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:18$77 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:19$78 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:20$79 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:21$80 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:22$81 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:23$82 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:24$83 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:25$84 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:26$85 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:27$86 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:28$87 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:29$88 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:30$89 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:31$90 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:32$91 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:33$92 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:34$93 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:35$94 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:36$95 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:37$96 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:38$97 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:39$98 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:40$99 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:41$100 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:42$101 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:43$102 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:44$103 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:45$104 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:46$105 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:47$106 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:48$107 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:49$108 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:50$109 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:51$110 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:52$111 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:53$112 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:54$113 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:55$114 (u_sine_wave_generator.sine_LUT).
Removed top 26 address bits (of 32) from memory init port sd_dac_top.$flatten\u_sine_wave_generator.$meminit$\sine_LUT$../1.hw/sine_wave_generator.v:56$115 (u_sine_wave_generator.sine_LUT).
Removed top 6 bits (of 7) from port B of cell sd_dac_top.$flatten\u_clk_divider.$add$../1.hw/clk_divider.v:17$164 ($add).
Removed top 1 bits (of 7) from port B of cell sd_dac_top.$flatten\u_clk_divider.$eq$../1.hw/clk_divider.v:13$162 ($eq).
Removed top 26 bits (of 32) from mux cell sd_dac_top.$flatten\u_sine_wave_generator.$ternary$../1.hw/sine_wave_generator.v:65$71 ($mux).
Removed top 31 bits (of 32) from port B of cell sd_dac_top.$flatten\u_sine_wave_generator.$add$../1.hw/sine_wave_generator.v:65$70 ($add).
Removed top 26 bits (of 32) from port Y of cell sd_dac_top.$flatten\u_sine_wave_generator.$add$../1.hw/sine_wave_generator.v:65$70 ($add).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$ge$../1.hw/cic4.v:110$168 ($ge).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:114$169 ($add).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$eq$../1.hw/cic4.v:120$170 ($eq).
Removed top 1 bits (of 16) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$eq$../1.hw/cic4.v:151$188 ($eq).
Removed top 16 bits (of 31) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:153$195 ($add).
Removed top 15 bits (of 31) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$ternary$../1.hw/cic4.v:153$198 ($mux).
Removed top 15 bits (of 31) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$ternary$../1.hw/cic4.v:151$200 ($mux).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$ge$../1.hw/cic3.v:110$207 ($ge).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:114$208 ($add).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$eq$../1.hw/cic3.v:120$209 ($eq).
Removed top 1 bits (of 17) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$eq$../1.hw/cic3.v:151$227 ($eq).
Removed top 17 bits (of 31) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:153$234 ($add).
Removed top 14 bits (of 31) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$ternary$../1.hw/cic3.v:153$237 ($mux).
Removed top 14 bits (of 31) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$ternary$../1.hw/cic3.v:151$239 ($mux).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$ge$../1.hw/cic2.v:120$246 ($ge).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:124$247 ($add).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$eq$../1.hw/cic2.v:130$248 ($eq).
Removed top 2 bits (of 37) from FF cell sd_dac_top.$auto$ff.cc:266:slice$602 ($adffe).
Removed top 1 bits (of 37) from FF cell sd_dac_top.$auto$ff.cc:266:slice$603 ($adffe).
Removed top 1 bits (of 16) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$ternary$../1.hw/cic2.v:155$259 ($mux).
Removed top 1 bits (of 37) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:186$268 ($add).
Removed top 2 bits (of 37) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:186$268 ($add).
Removed top 1 bits (of 38) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:186$268 ($add).
Removed top 1 bits (of 37) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$eq$../1.hw/cic2.v:187$273 ($eq).
Removed top 1 bits (of 18) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$eq$../1.hw/cic2.v:191$285 ($eq).
Removed top 18 bits (of 32) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:193$292 ($add).
Removed top 14 bits (of 32) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$ternary$../1.hw/cic2.v:193$295 ($mux).
Removed top 14 bits (of 32) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$ternary$../1.hw/cic2.v:191$297 ($mux).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$ge$../1.hw/cic1.v:120$305 ($ge).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:124$306 ($add).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$eq$../1.hw/cic1.v:130$307 ($eq).
Removed top 1 bits (of 36) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$eq$../1.hw/cic1.v:187$332 ($eq).
Removed top 1 bits (of 19) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$eq$../1.hw/cic1.v:191$344 ($eq).
Removed top 19 bits (of 33) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:193$351 ($add).
Removed top 2 bits (of 36) from FF cell sd_dac_top.$auto$ff.cc:266:slice$609 ($adffe).
Removed top 1 bits (of 36) from FF cell sd_dac_top.$auto$ff.cc:266:slice$610 ($adffe).
Removed top 14 bits (of 33) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$ternary$../1.hw/cic1.v:193$354 ($mux).
Removed top 14 bits (of 33) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$ternary$../1.hw/cic1.v:191$356 ($mux).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ge$../1.hw/inverseSinc.v:139$364 ($ge).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:143$365 ($add).
Removed top 1 bits (of 2) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$eq$../1.hw/inverseSinc.v:149$366 ($eq).
Removed top 2 bits (of 39) from FF cell sd_dac_top.$auto$ff.cc:266:slice$620 ($adffe).
Removed top 2 bits (of 39) from FF cell sd_dac_top.$auto$ff.cc:266:slice$621 ($adffe).
Removed top 8 bits (of 16) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:176$374 ($mux).
Removed top 6 bits (of 16) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:178$375 ($mul).
Removed top 6 bits (of 36) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:178$375 ($mul).
Removed top 4 bits (of 16) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:180$377 ($mux).
Removed top 3 bits (of 16) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:182$378 ($mul).
Removed top 3 bits (of 36) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:182$378 ($mul).
Removed top 1 bits (of 16) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:184$380 ($mux).
Removed top 1 bits (of 16) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:188$383 ($mux).
Removed top 4 bits (of 16) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:192$386 ($mux).
Removed top 3 bits (of 16) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:194$387 ($mul).
Removed top 3 bits (of 36) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:194$387 ($mul).
Removed top 8 bits (of 16) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:196$389 ($mux).
Removed top 6 bits (of 16) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:198$390 ($mul).
Removed top 6 bits (of 36) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:198$390 ($mul).
Removed top 6 bits (of 36) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:202$391 ($add).
Removed top 3 bits (of 36) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:202$391 ($add).
Removed top 3 bits (of 37) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:202$391 ($add).
Removed top 3 bits (of 36) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393 ($add).
Removed top 6 bits (of 36) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393 ($add).
Removed top 3 bits (of 37) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393 ($add).
Removed top 2 bits (of 39) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:233$397 ($add).
Removed top 2 bits (of 39) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:233$397 ($add).
Removed top 2 bits (of 40) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:233$397 ($add).
Removed top 1 bits (of 39) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$eq$../1.hw/inverseSinc.v:257$406 ($eq).
Removed top 1 bits (of 18) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$eq$../1.hw/inverseSinc.v:261$418 ($eq).
Removed top 18 bits (of 33) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:263$425 ($add).
Removed top 15 bits (of 33) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:263$428 ($mux).
Removed top 4 bits (of 20) from FF cell sd_dac_top.$auto$ff.cc:266:slice$618 ($adffe).
Removed top 15 bits (of 33) from mux cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:261$430 ($mux).
Removed top 5 bits (of 39) from FF cell sd_dac_top.$auto$ff.cc:266:slice$619 ($adffe).
Removed top 1 bits (of 39) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$eq$../1.hw/inverseSinc.v:234$439 ($eq).
Removed top 2 bits (of 18) from port B of cell sd_dac_top.$flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:33$19 ($sub).
Removed top 2 bits (of 18) from port Y of cell sd_dac_top.$flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:33$19 ($sub).
Removed top 2 bits (of 18) from port A of cell sd_dac_top.$flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:33$19 ($sub).
Removed top 1 bits (of 36) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:186$327 ($add).
Removed top 2 bits (of 36) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:186$327 ($add).
Removed top 1 bits (of 37) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:186$327 ($add).
Removed top 3 bits (of 37) from FF cell sd_dac_top.$auto$ff.cc:266:slice$621 ($adffe).
Removed top 4 bits (of 20) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:198$390 ($mul).
Removed top 4 bits (of 30) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:198$390 ($mul).
Removed top 4 bits (of 30) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393 ($add).
Removed top 5 bits (of 39) from FF cell sd_dac_top.$auto$ff.cc:266:slice$622 ($adffe).
Removed top 3 bits (of 37) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:233$397 ($add).
Removed top 4 bits (of 20) from FF cell sd_dac_top.$auto$ff.cc:266:slice$617 ($adffe).
Removed top 4 bits (of 20) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:194$387 ($mul).
Removed top 4 bits (of 33) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:194$387 ($mul).
Removed top 4 bits (of 33) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393 ($add).
Removed top 4 bits (of 34) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393 ($add).
Removed top 5 bits (of 39) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:256$401 ($add).
Removed top 4 bits (of 20) from FF cell sd_dac_top.$auto$ff.cc:266:slice$616 ($adffe).
Removed top 4 bits (of 34) from FF cell sd_dac_top.$auto$ff.cc:266:slice$619 ($adffe).
Removed top 4 bits (of 20) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:190$384 ($mul).
Removed top 4 bits (of 36) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:190$384 ($mul).
Removed top 4 bits (of 34) from FF cell sd_dac_top.$auto$ff.cc:266:slice$622 ($adffe).
Removed top 4 bits (of 34) from port B of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:256$401 ($add).
Removed top 4 bits (of 20) from FF cell sd_dac_top.$auto$ff.cc:266:slice$615 ($adffe).
Removed top 4 bits (of 20) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:186$381 ($mul).
Removed top 4 bits (of 36) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:186$381 ($mul).
Removed top 4 bits (of 20) from FF cell sd_dac_top.$auto$ff.cc:266:slice$614 ($adffe).
Removed top 4 bits (of 20) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:182$378 ($mul).
Removed top 4 bits (of 33) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:182$378 ($mul).
Removed top 4 bits (of 20) from FF cell sd_dac_top.$auto$ff.cc:266:slice$613 ($adffe).
Removed top 4 bits (of 20) from port A of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:178$375 ($mul).
Removed top 4 bits (of 30) from port Y of cell sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$mul$../1.hw/inverseSinc.v:178$375 ($mul).
Removed top 15 bits (of 33) from wire sd_dac_top.$flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:263$428_Y.
Removed top 14 bits (of 33) from wire sd_dac_top.$flatten\u_interpolatingFilter.\filter4.$ternary$../1.hw/cic1.v:193$354_Y.
Removed top 14 bits (of 32) from wire sd_dac_top.$flatten\u_interpolatingFilter.\filter5.$ternary$../1.hw/cic2.v:193$295_Y.
Removed top 14 bits (of 31) from wire sd_dac_top.$flatten\u_interpolatingFilter.\filter6.$ternary$../1.hw/cic3.v:153$237_Y.
Removed top 15 bits (of 31) from wire sd_dac_top.$flatten\u_interpolatingFilter.\filter7.$ternary$../1.hw/cic4.v:153$198_Y.
Removed top 26 bits (of 32) from wire sd_dac_top.$flatten\u_sine_wave_generator.$add$../1.hw/sine_wave_generator.v:65$70_Y.

13.16. Executing PEEPOPT pass (run peephole optimizers).

13.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

13.18. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converted 0 (p)mux cells into 0 pmux cells.
<suppressed ~35 debug messages>

13.19. Executing SHARE pass (SAT-based resource sharing).

13.20. Executing TECHMAP pass (map to technology primitives).

13.20.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/cmp2lut.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

13.20.2. Continuing TECHMAP pass.
Using template $paramod$eae7bad97664e7f2f52c363827077e96a763dc1c\_90_lut_cmp_ for cells of type $ge.
No more expansions possible.
<suppressed ~40 debug messages>

13.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.
<suppressed ~12 debug messages>

13.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 3 unused cells and 30 unused wires.
<suppressed ~4 debug messages>

13.23. Executing TECHMAP pass (map to technology primitives).

13.23.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/mul_map.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/mul_map.v' to AST representation.
Generating RTLIL representation for module `\$__MULMXN'.
Successfully finished Verilog frontend.

13.23.2. Continuing TECHMAP pass.
Using template $paramod$2883d34b7489a4210b146b57fdcc242d97ce2bb6\$__MULMXN for cells of type $mul.
Using template $paramod$10000301c6f1d13a2d188e9997495e88ebb26a84\$__MULMXN for cells of type $mul.
Using template $paramod$ba0300e20bcf1d2d32a4692febec9409ebd58482\$__MULMXN for cells of type $mul.
Using template $paramod$602129acffd131680da445bb7aafefcbacbb6354\$__MULMXN for cells of type $mul.
Using template $paramod$bdc143dc9412fff308e3067c3e7334d870ff3eab\$__MULMXN for cells of type $mul.
Using template $paramod$eb2ccb3ac62161565169c528d9fc9c45e3535fd4\$__MULMXN for cells of type $mul.
Using template $paramod$4f64b506d53ca9407e15e1cdc861647c24e50aca\$__MULMXN for cells of type $mul.
No more expansions possible.
<suppressed ~153 debug messages>

13.24. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module sd_dac_top:
  creating $macc model for $flatten\u_clk_divider.$add$../1.hw/clk_divider.v:17$164 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:143$365 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:202$391 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:207$392 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:233$397 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:256$401 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:263$425 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:124$306 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:165$323 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:186$327 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:193$351 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:124$247 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:165$264 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:186$268 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:193$292 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:114$208 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:149$222 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:153$234 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:114$169 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:149$183 ($add).
  creating $macc model for $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:153$195 ($add).
  creating $macc model for $flatten\u_sigma_delta_modulator.$add$../1.hw/sigma_delta_modulator.v:30$17 ($add).
  creating $macc model for $flatten\u_sigma_delta_modulator.$add$../1.hw/sigma_delta_modulator.v:36$20 ($add).
  creating $macc model for $flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:27$16 ($sub).
  creating $macc model for $flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:33$19 ($sub).
  creating $macc model for $flatten\u_sine_wave_generator.$add$../1.hw/sine_wave_generator.v:65$70 ($add).
  creating $alu model for $macc $flatten\u_sine_wave_generator.$add$../1.hw/sine_wave_generator.v:65$70.
  creating $alu model for $macc $flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:33$19.
  creating $alu model for $macc $flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:27$16.
  creating $alu model for $macc $flatten\u_sigma_delta_modulator.$add$../1.hw/sigma_delta_modulator.v:36$20.
  creating $alu model for $macc $flatten\u_sigma_delta_modulator.$add$../1.hw/sigma_delta_modulator.v:30$17.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:153$195.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:149$183.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:114$169.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:153$234.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:149$222.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:114$208.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:193$292.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:186$268.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:165$264.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:124$247.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:193$351.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:186$327.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:165$323.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:124$306.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:263$425.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:256$401.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:233$397.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:207$392.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:202$391.
  creating $alu model for $macc $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:143$365.
  creating $alu model for $macc $flatten\u_clk_divider.$add$../1.hw/clk_divider.v:17$164.
  creating $alu cell for $flatten\u_clk_divider.$add$../1.hw/clk_divider.v:17$164: $auto$alumacc.cc:485:replace_alu$655
  creating $alu cell for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:143$365: $auto$alumacc.cc:485:replace_alu$658
  creating $alu cell for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:202$391: $auto$alumacc.cc:485:replace_alu$661
  creating $alu cell for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:207$392: $auto$alumacc.cc:485:replace_alu$664
  creating $alu cell for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:212$393: $auto$alumacc.cc:485:replace_alu$667
  creating $alu cell for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:233$397: $auto$alumacc.cc:485:replace_alu$670
  creating $alu cell for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:256$401: $auto$alumacc.cc:485:replace_alu$673
  creating $alu cell for $flatten\u_interpolatingFilter.\filter3.$add$../1.hw/inverseSinc.v:263$425: $auto$alumacc.cc:485:replace_alu$676
  creating $alu cell for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:124$306: $auto$alumacc.cc:485:replace_alu$679
  creating $alu cell for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:165$323: $auto$alumacc.cc:485:replace_alu$682
  creating $alu cell for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:186$327: $auto$alumacc.cc:485:replace_alu$685
  creating $alu cell for $flatten\u_interpolatingFilter.\filter4.$add$../1.hw/cic1.v:193$351: $auto$alumacc.cc:485:replace_alu$688
  creating $alu cell for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:124$247: $auto$alumacc.cc:485:replace_alu$691
  creating $alu cell for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:165$264: $auto$alumacc.cc:485:replace_alu$694
  creating $alu cell for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:186$268: $auto$alumacc.cc:485:replace_alu$697
  creating $alu cell for $flatten\u_interpolatingFilter.\filter5.$add$../1.hw/cic2.v:193$292: $auto$alumacc.cc:485:replace_alu$700
  creating $alu cell for $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:114$208: $auto$alumacc.cc:485:replace_alu$703
  creating $alu cell for $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:149$222: $auto$alumacc.cc:485:replace_alu$706
  creating $alu cell for $flatten\u_interpolatingFilter.\filter6.$add$../1.hw/cic3.v:153$234: $auto$alumacc.cc:485:replace_alu$709
  creating $alu cell for $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:114$169: $auto$alumacc.cc:485:replace_alu$712
  creating $alu cell for $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:149$183: $auto$alumacc.cc:485:replace_alu$715
  creating $alu cell for $flatten\u_interpolatingFilter.\filter7.$add$../1.hw/cic4.v:153$195: $auto$alumacc.cc:485:replace_alu$718
  creating $alu cell for $flatten\u_sigma_delta_modulator.$add$../1.hw/sigma_delta_modulator.v:30$17: $auto$alumacc.cc:485:replace_alu$721
  creating $alu cell for $flatten\u_sigma_delta_modulator.$add$../1.hw/sigma_delta_modulator.v:36$20: $auto$alumacc.cc:485:replace_alu$724
  creating $alu cell for $flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:27$16: $auto$alumacc.cc:485:replace_alu$727
  creating $alu cell for $flatten\u_sigma_delta_modulator.$sub$../1.hw/sigma_delta_modulator.v:33$19: $auto$alumacc.cc:485:replace_alu$730
  creating $alu cell for $flatten\u_sine_wave_generator.$add$../1.hw/sine_wave_generator.v:65$70: $auto$alumacc.cc:485:replace_alu$733
  created 27 $alu and 0 $macc cells.

13.25. Executing OPT pass (performing simple optimizations).

13.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

13.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.25.6. Executing OPT_DFF pass (perform DFF optimizations).

13.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 0 unused cells and 80 unused wires.
<suppressed ~1 debug messages>

13.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.25.9. Rerunning OPT passes. (Maybe there is more to do..)

13.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

13.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.25.13. Executing OPT_DFF pass (perform DFF optimizations).

13.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.25.16. Finished OPT passes. (There is nothing left to do.)

13.26. Executing MEMORY pass.

13.26.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

13.26.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

13.26.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

13.26.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

13.26.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\u_sine_wave_generator.sine_LUT'[0] in module `\sd_dac_top': merging output FF to cell.

13.26.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 1 unused cells and 17 unused wires.
<suppressed ~2 debug messages>

13.26.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

13.26.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

13.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.26.10. Executing MEMORY_COLLECT pass (generating $mem cells).

13.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.28. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory sd_dac_top.u_sine_wave_generator.sine_LUT
<suppressed ~153 debug messages>

13.29. Executing TECHMAP pass (map to technology primitives).

13.29.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/brams_map.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__CC_BRAM_TDP_'.
Generating RTLIL representation for module `\$__CC_BRAM_SDP_'.
Successfully finished Verilog frontend.

13.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

13.30. Executing OPT pass (performing simple optimizations).

13.30.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.
<suppressed ~9 debug messages>

13.30.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.30.3. Executing OPT_DFF pass (perform DFF optimizations).

13.30.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 1 unused cells and 8 unused wires.
<suppressed ~2 debug messages>

13.30.5. Finished fast OPT passes.

13.31. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \u_sine_wave_generator.sine_LUT in module \sd_dac_top:
  created 44 $dff cells and 0 static cells of width 16.
Extracted data FF from read port 0 of sd_dac_top.u_sine_wave_generator.sine_LUT: $\u_sine_wave_generator.sine_LUT$rdreg[0]
  read interface: 1 $dff and 63 $mux cells.
  write interface: 0 write mux blocks.

13.32. Executing OPT pass (performing simple optimizations).

13.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.
<suppressed ~38 debug messages>

13.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

13.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][12]$882:
      Old ports: A=16'1101101111110000, B=16'1100101011010100, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [2] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [15:6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [4:3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [1:0] } = { 3'110 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [5] 3'101 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [5] 6'111000 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][11]$879:
      Old ports: A=16'0000000000000000, B=16'1110110111001001, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815
      New ports: A=1'0, B=1'1, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [15:1] = { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][10]$876:
      Old ports: A=16'0010010000010000, B=16'0001001000110111, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [15:11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [9:1] } = { 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] 3'000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] 2'10 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][9]$873:
      Old ports: A=16'0100010100110011, B=16'0011010100101100, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812
      New ports: A=2'01, B=2'10, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [15:3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [1] } = { 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [2] 7'0101001 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [0] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][8]$870:
      Old ports: A=16'0110000010111100, B=16'0101001111010010, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811
      New ports: A=2'10, B=2'01, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [2:1]
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [15:3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [0] } = { 2'01 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [2:1] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [1] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [2] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [2] 1'0 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][7]$867:
      Old ports: A=16'0111010001101110, B=16'0110101110101101, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809
      New ports: A=2'10, B=2'01, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1:0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [15:2] = { 3'011 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1:0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1:0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1] 4'1011 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][6]$864:
      Old ports: A=16'0111111010110001, B=16'0111101011010000, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808
      New ports: A=2'01, B=2'10, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [15:7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [5:1] } = { 5'01111 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [0] 3'101 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [0] 4'1000 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][5]$861:
      Old ports: A=16'0111111010110001, B=16'0111111111111111, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806
      New ports: A=1'0, B=1'1, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1]
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [15:2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [0] } = { 7'0111111 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1] 2'11 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][4]$858:
      Old ports: A=16'0111010001101110, B=16'0111101011010000, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805
      New ports: A=2'01, B=2'10, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [1] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [15:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [3:2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [0] } = { 4'0111 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [4] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [4] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [1] 1'0 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][3]$855:
      Old ports: A=16'0110000010111100, B=16'0110101110101101, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [15:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [3:1] } = { 4'0110 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] 6'101110 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][2]$852:
      Old ports: A=16'0100010100110011, B=16'0101001111010010, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802
      New ports: A=2'01, B=2'10, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [15:7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [5:1] } = { 3'010 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [6] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [6] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [0] 4'1001 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][1]$849:
      Old ports: A=16'0010010000010000, B=16'0011010100101100, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [2] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [15:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [1:0] } = { 3'001 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [2] 3'010 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [2] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [2] 2'00 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][0]$846:
      Old ports: A=16'0000000000000000, B=16'0001001000110111, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799
      New ports: A=1'0, B=1'1, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [15:1] = { 3'000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] 3'000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][20]$906:
      Old ports: A=16'1011101011001101, B=16'1100101011010100, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829
      New ports: A=2'01, B=2'10, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [15:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [3:1] } = { 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [0] 7'1010110 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [0] 2'10 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][16]$894:
      Old ports: A=16'1000000101001111, B=16'1000000000000001, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823
      New ports: A=1'1, B=1'0, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [1]
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [15:2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [0] } = { 7'1000000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [1] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [1] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [1] 1'1 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][21]$909:
      Old ports: A=16'1101101111110000, B=16'1110110111001001, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [15:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [3:1] } = { 2'11 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] 3'111 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [0] 2'00 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][18]$900:
      Old ports: A=16'1000101110010010, B=16'1001010001010011, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [15:8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [6:1] } = { 3'100 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [0] 5'01001 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][14]$888:
      Old ports: A=16'1001111101000100, B=16'1001010001010011, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [15:3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [1] } = { 4'1001 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [2] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [2] 3'010 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [0] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][19]$903:
      Old ports: A=16'1001111101000100, B=16'1010110000101110, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827
      New ports: A=2'10, B=2'01, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [1] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [15:7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [5:2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [0] } = { 2'10 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [6] 2'11 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [6] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [1] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [1] 2'10 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][17]$897:
      Old ports: A=16'1000000101001111, B=16'1000010100110000, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824
      New ports: A=2'01, B=2'10, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [15:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [3:1] } = { 5'10000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [4] 3'010 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [0] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][13]$885:
      Old ports: A=16'1011101011001101, B=16'1010110000101110, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818
      New ports: A=2'01, B=2'10, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [1:0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [15:2] = { 3'101 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [0] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [1:0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [1] 3'011 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:176$374:
      Old ports: A=8'00011001, B=8'11011001, Y=\u_interpolatingFilter.filter3.product_mux [7:0]
      New ports: A=1'0, B=1'1, Y=\u_interpolatingFilter.filter3.product_mux [6]
      New connections: { \u_interpolatingFilter.filter3.product_mux [7] \u_interpolatingFilter.filter3.product_mux [5:0] } = { \u_interpolatingFilter.filter3.product_mux [6] 6'011001 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:180$377:
      Old ports: A=12'100000000111, B=12'000111101101, Y=\u_interpolatingFilter.filter3.product_mux_1 [11:0]
      New ports: A=2'01, B=2'10, Y={ \u_interpolatingFilter.filter3.product_mux_1 [3] \u_interpolatingFilter.filter3.product_mux_1 [1] }
      New connections: { \u_interpolatingFilter.filter3.product_mux_1 [11:4] \u_interpolatingFilter.filter3.product_mux_1 [2] \u_interpolatingFilter.filter3.product_mux_1 [0] } = { \u_interpolatingFilter.filter3.product_mux_1 [1] 2'00 \u_interpolatingFilter.filter3.product_mux_1 [3] \u_interpolatingFilter.filter3.product_mux_1 [3] \u_interpolatingFilter.filter3.product_mux_1 [3] \u_interpolatingFilter.filter3.product_mux_1 [3] 3'011 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:184$380:
      Old ports: A=15'010001001000000, B=15'111000011011011, Y=\u_interpolatingFilter.filter3.product_mux_2 [14:0]
      New ports: A=2'10, B=2'01, Y={ \u_interpolatingFilter.filter3.product_mux_2 [9] \u_interpolatingFilter.filter3.product_mux_2 [0] }
      New connections: { \u_interpolatingFilter.filter3.product_mux_2 [14:10] \u_interpolatingFilter.filter3.product_mux_2 [8:1] } = { \u_interpolatingFilter.filter3.product_mux_2 [0] 1'1 \u_interpolatingFilter.filter3.product_mux_2 [0] 3'000 \u_interpolatingFilter.filter3.product_mux_2 [0] 2'10 \u_interpolatingFilter.filter3.product_mux_2 [0] \u_interpolatingFilter.filter3.product_mux_2 [0] 1'0 \u_interpolatingFilter.filter3.product_mux_2 [0] }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:188$383:
      Old ports: A=15'111000011011011, B=15'010001001000000, Y=\u_interpolatingFilter.filter3.product_mux_3 [14:0]
      New ports: A=2'01, B=2'10, Y={ \u_interpolatingFilter.filter3.product_mux_3 [9] \u_interpolatingFilter.filter3.product_mux_3 [0] }
      New connections: { \u_interpolatingFilter.filter3.product_mux_3 [14:10] \u_interpolatingFilter.filter3.product_mux_3 [8:1] } = { \u_interpolatingFilter.filter3.product_mux_3 [0] 1'1 \u_interpolatingFilter.filter3.product_mux_3 [0] 3'000 \u_interpolatingFilter.filter3.product_mux_3 [0] 2'10 \u_interpolatingFilter.filter3.product_mux_3 [0] \u_interpolatingFilter.filter3.product_mux_3 [0] 1'0 \u_interpolatingFilter.filter3.product_mux_3 [0] }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:192$386:
      Old ports: A=12'000111101101, B=12'100000000111, Y=\u_interpolatingFilter.filter3.product_mux_4 [11:0]
      New ports: A=2'10, B=2'01, Y={ \u_interpolatingFilter.filter3.product_mux_4 [3] \u_interpolatingFilter.filter3.product_mux_4 [1] }
      New connections: { \u_interpolatingFilter.filter3.product_mux_4 [11:4] \u_interpolatingFilter.filter3.product_mux_4 [2] \u_interpolatingFilter.filter3.product_mux_4 [0] } = { \u_interpolatingFilter.filter3.product_mux_4 [1] 2'00 \u_interpolatingFilter.filter3.product_mux_4 [3] \u_interpolatingFilter.filter3.product_mux_4 [3] \u_interpolatingFilter.filter3.product_mux_4 [3] \u_interpolatingFilter.filter3.product_mux_4 [3] 3'011 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter3.$ternary$../1.hw/inverseSinc.v:196$389:
      Old ports: A=8'11011001, B=8'00011001, Y=\u_interpolatingFilter.filter3.product_mux_5 [7:0]
      New ports: A=1'1, B=1'0, Y=\u_interpolatingFilter.filter3.product_mux_5 [6]
      New connections: { \u_interpolatingFilter.filter3.product_mux_5 [7] \u_interpolatingFilter.filter3.product_mux_5 [5:0] } = { \u_interpolatingFilter.filter3.product_mux_5 [6] 6'011001 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter4.$ternary$../1.hw/cic1.v:151$315:
      Old ports: A=16'1111011111001111, B=16'0000100000101000, Y=\u_interpolatingFilter.filter4.product_mux
      New ports: A=2'01, B=2'10, Y={ \u_interpolatingFilter.filter4.product_mux [5] \u_interpolatingFilter.filter4.product_mux [0] }
      New connections: { \u_interpolatingFilter.filter4.product_mux [15:6] \u_interpolatingFilter.filter4.product_mux [4:1] } = { \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [5] \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] 2'01 \u_interpolatingFilter.filter4.product_mux [0] \u_interpolatingFilter.filter4.product_mux [0] }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter4.$ternary$../1.hw/cic1.v:159$321:
      Old ports: A=16'0000100000101000, B=16'1111011111001111, Y=\u_interpolatingFilter.filter4.product_mux_2
      New ports: A=2'10, B=2'01, Y={ \u_interpolatingFilter.filter4.product_mux_2 [5] \u_interpolatingFilter.filter4.product_mux_2 [0] }
      New connections: { \u_interpolatingFilter.filter4.product_mux_2 [15:6] \u_interpolatingFilter.filter4.product_mux_2 [4:1] } = { \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [5] \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] 2'01 \u_interpolatingFilter.filter4.product_mux_2 [0] \u_interpolatingFilter.filter4.product_mux_2 [0] }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter5.$ternary$../1.hw/cic2.v:151$256:
      Old ports: A=16'0000000000000000, B=16'1111010101100011, Y=\u_interpolatingFilter.filter5.product_mux
      New ports: A=1'0, B=1'1, Y=\u_interpolatingFilter.filter5.product_mux [0]
      New connections: \u_interpolatingFilter.filter5.product_mux [15:1] = { \u_interpolatingFilter.filter5.product_mux [0] \u_interpolatingFilter.filter5.product_mux [0] \u_interpolatingFilter.filter5.product_mux [0] \u_interpolatingFilter.filter5.product_mux [0] 1'0 \u_interpolatingFilter.filter5.product_mux [0] 1'0 \u_interpolatingFilter.filter5.product_mux [0] 1'0 \u_interpolatingFilter.filter5.product_mux [0] \u_interpolatingFilter.filter5.product_mux [0] 3'000 \u_interpolatingFilter.filter5.product_mux [0] }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter5.$ternary$../1.hw/cic2.v:155$259:
      Old ports: A=15'010000000010111, B=15'101010100001100, Y=\u_interpolatingFilter.filter5.product_mux_1 [14:0]
      New ports: A=2'01, B=2'10, Y={ \u_interpolatingFilter.filter5.product_mux_1 [3] \u_interpolatingFilter.filter5.product_mux_1 [0] }
      New connections: { \u_interpolatingFilter.filter5.product_mux_1 [14:4] \u_interpolatingFilter.filter5.product_mux_1 [2:1] } = { \u_interpolatingFilter.filter5.product_mux_1 [3] \u_interpolatingFilter.filter5.product_mux_1 [0] \u_interpolatingFilter.filter5.product_mux_1 [3] 1'0 \u_interpolatingFilter.filter5.product_mux_1 [3] 1'0 \u_interpolatingFilter.filter5.product_mux_1 [3] 3'000 \u_interpolatingFilter.filter5.product_mux_1 [0] 1'1 \u_interpolatingFilter.filter5.product_mux_1 [0] }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter5.$ternary$../1.hw/cic2.v:159$262:
      Old ports: A=16'0010000000010111, B=16'1111010101100011, Y=\u_interpolatingFilter.filter5.product_mux_2
      New ports: A=2'01, B=2'10, Y={ \u_interpolatingFilter.filter5.product_mux_2 [5] \u_interpolatingFilter.filter5.product_mux_2 [2] }
      New connections: { \u_interpolatingFilter.filter5.product_mux_2 [15:6] \u_interpolatingFilter.filter5.product_mux_2 [4:3] \u_interpolatingFilter.filter5.product_mux_2 [1:0] } = { \u_interpolatingFilter.filter5.product_mux_2 [5] \u_interpolatingFilter.filter5.product_mux_2 [5] 1'1 \u_interpolatingFilter.filter5.product_mux_2 [5] 1'0 \u_interpolatingFilter.filter5.product_mux_2 [5] 1'0 \u_interpolatingFilter.filter5.product_mux_2 [5] 1'0 \u_interpolatingFilter.filter5.product_mux_2 [5] \u_interpolatingFilter.filter5.product_mux_2 [2] 3'011 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter6.$ternary$../1.hw/cic3.v:139$217:
      Old ports: A=16'1111011011111011, B=16'0100100100000101, Y=\u_interpolatingFilter.filter6.product_mux
      New ports: A=2'01, B=2'10, Y=\u_interpolatingFilter.filter6.product_mux [2:1]
      New connections: { \u_interpolatingFilter.filter6.product_mux [15:3] \u_interpolatingFilter.filter6.product_mux [0] } = { \u_interpolatingFilter.filter6.product_mux [1] 1'1 \u_interpolatingFilter.filter6.product_mux [1] \u_interpolatingFilter.filter6.product_mux [1] \u_interpolatingFilter.filter6.product_mux [2:1] \u_interpolatingFilter.filter6.product_mux [1] \u_interpolatingFilter.filter6.product_mux [2:1] \u_interpolatingFilter.filter6.product_mux [1] \u_interpolatingFilter.filter6.product_mux [1] \u_interpolatingFilter.filter6.product_mux [1] \u_interpolatingFilter.filter6.product_mux [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter6.$ternary$../1.hw/cic3.v:143$220:
      Old ports: A=16'0100100100000101, B=16'1111011011111011, Y=\u_interpolatingFilter.filter6.product_mux_1
      New ports: A=2'10, B=2'01, Y=\u_interpolatingFilter.filter6.product_mux_1 [2:1]
      New connections: { \u_interpolatingFilter.filter6.product_mux_1 [15:3] \u_interpolatingFilter.filter6.product_mux_1 [0] } = { \u_interpolatingFilter.filter6.product_mux_1 [1] 1'1 \u_interpolatingFilter.filter6.product_mux_1 [1] \u_interpolatingFilter.filter6.product_mux_1 [1] \u_interpolatingFilter.filter6.product_mux_1 [2:1] \u_interpolatingFilter.filter6.product_mux_1 [1] \u_interpolatingFilter.filter6.product_mux_1 [2:1] \u_interpolatingFilter.filter6.product_mux_1 [1] \u_interpolatingFilter.filter6.product_mux_1 [1] \u_interpolatingFilter.filter6.product_mux_1 [1] \u_interpolatingFilter.filter6.product_mux_1 [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter7.$ternary$../1.hw/cic4.v:139$178:
      Old ports: A=17'11110110100000011, B=17'01001001011111101, Y=\u_interpolatingFilter.filter7.product_mux
      New ports: A=2'01, B=2'10, Y=\u_interpolatingFilter.filter7.product_mux [2:1]
      New connections: { \u_interpolatingFilter.filter7.product_mux [16:3] \u_interpolatingFilter.filter7.product_mux [0] } = { \u_interpolatingFilter.filter7.product_mux [1] 1'1 \u_interpolatingFilter.filter7.product_mux [1] \u_interpolatingFilter.filter7.product_mux [1] \u_interpolatingFilter.filter7.product_mux [2:1] \u_interpolatingFilter.filter7.product_mux [1] \u_interpolatingFilter.filter7.product_mux [2:1] \u_interpolatingFilter.filter7.product_mux [2] \u_interpolatingFilter.filter7.product_mux [2] \u_interpolatingFilter.filter7.product_mux [2] \u_interpolatingFilter.filter7.product_mux [2] \u_interpolatingFilter.filter7.product_mux [2] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\u_interpolatingFilter.\filter7.$ternary$../1.hw/cic4.v:143$181:
      Old ports: A=17'01001001011111101, B=17'11110110100000011, Y=\u_interpolatingFilter.filter7.product_mux_1
      New ports: A=2'10, B=2'01, Y=\u_interpolatingFilter.filter7.product_mux_1 [2:1]
      New connections: { \u_interpolatingFilter.filter7.product_mux_1 [16:3] \u_interpolatingFilter.filter7.product_mux_1 [0] } = { \u_interpolatingFilter.filter7.product_mux_1 [1] 1'1 \u_interpolatingFilter.filter7.product_mux_1 [1] \u_interpolatingFilter.filter7.product_mux_1 [1] \u_interpolatingFilter.filter7.product_mux_1 [2:1] \u_interpolatingFilter.filter7.product_mux_1 [1] \u_interpolatingFilter.filter7.product_mux_1 [2:1] \u_interpolatingFilter.filter7.product_mux_1 [2] \u_interpolatingFilter.filter7.product_mux_1 [2] \u_interpolatingFilter.filter7.product_mux_1 [2] \u_interpolatingFilter.filter7.product_mux_1 [2] \u_interpolatingFilter.filter7.product_mux_1 [2] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15:
      Old ports: A=16'1000000000000000, B=16'0111111111111111, Y=$flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [15] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] }
      New connections: $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [14:1] = { $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] $flatten\u_sigma_delta_modulator.$ternary$../1.hw/sigma_delta_modulator.v:27$15_Y [0] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][5][15]$891:
      Old ports: A=16'1000101110010010, B=16'1000010100110000, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821
      New ports: A=2'01, B=2'10, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [1] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [15:6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [4:2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [0] } = { 4'1000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [1] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [1] 5'01000 }
  Optimizing cells in module \sd_dac_top.
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$828:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [0] 4'0100 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [4] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$a$829 [0] }, B={ 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [4] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][10]$b$830 [0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [14] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [10:8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [5:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [15] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [7:6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [1] } = { 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [0] 3'111 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [0] 1'0 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$825:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [0] 4'1001 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$a$826 [0] }, B={ 2'11 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [6] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [6] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [1] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$b$827 [1] 1'0 }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [11:10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [8:6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [4:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [15:12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [5] } = { 2'10 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [3] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$822:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [1] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$a$823 [1] 1'1 }, B={ 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][8]$b$824 [0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [15:9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [7:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [3:2] } = { 5'10000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [4] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$819:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785
      New ports: A={ 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [2] 3'010 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$a$820 [0] }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [1] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [1] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [5] 2'10 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][7]$b$821 [1] 1'0 }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [10:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [2:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [15:11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [3] } = { 3'100 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [9] 1'0 }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$816:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [5] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [5] 2'10 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$a$817 [2] 2'00 }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [1] 3'011 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][6]$b$818 [1:0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [6:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [15:13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [11:9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [7] } = { 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [4:3] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [6] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$813:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [10] 2'10 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$a$814 [0] }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][5]$b$815 [0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [4:3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [15:11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [9:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [2] } = { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$810:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [1] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [1] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [2] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$a$811 [2:1] 1'0 }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [2] 5'11001 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][4]$b$812 [0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [8:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [2:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [15:13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [3] } = { 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [2] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [2] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$807:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779
      New ports: A={ 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [0] 2'01 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [0] 3'100 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$a$808 [0] }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1:0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1] 3'101 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][3]$b$809 [1:0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [8:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [2:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [15:13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [3] } = { 3'011 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [2] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$804:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778
      New ports: A={ 2'01 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$a$805 [1] 1'0 }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1] 2'11 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][2]$b$806 [1] 1'1 }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [6:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [1:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [15:9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [3:2] } = { 4'0111 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [5:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [1] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$801:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776
      New ports: A={ 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [6] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [0] 3'101 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$a$802 [0] }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] 3'101 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [4] 2'10 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][1]$b$803 [0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [11:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [2:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [15:12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [3] } = { 2'01 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [2] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$798:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775
      New ports: A={ 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$a$799 [0] }, B={ 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [2] 1'0 }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [4:2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [15:11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [9:5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [1] } = { 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [2] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [3] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [0] }
  Optimizing cells in module \sd_dac_top.
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$789:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790, B=16'x, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [14] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [10:8] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [5:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [2] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][5]$a$790 [0] }, B=11'x, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [14] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [10:8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [6:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [2:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [15] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [3] } = { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [0] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$786:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$a$769
      New ports: A={ 3'000 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [4] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [8] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$a$787 [1:0] }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [11:10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [8:6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [4:0] }, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$a$769 [13:0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$a$769 [15:14] = 2'10
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$783:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [12] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$a$784 [6:0] }, B={ 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [10:4] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][3]$b$785 [2:0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767 [14] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767 [12:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767 [15] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767 [13] } = { 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767 [3] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$780:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [12] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [8:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$a$781 [2:0] }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [4:3] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][2]$b$782 [1:0] }, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [14:0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [15] = $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [11]
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$777:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764
      New ports: A={ 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [5] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [8] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [6:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [1] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$a$778 [1:0] }, B={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [8:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][1]$b$779 [2:0] }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [8:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [2:0] }
      New connections: { $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [15:13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [11] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [3] } = { 3'011 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [2] }
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$774:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763
      New ports: A={ 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [2] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [3] 2'00 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [4:2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [0] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$a$775 [0] }, B={ 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [6] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [11:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [2:0] }, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [14:0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [15] = 1'0
  Optimizing cells in module \sd_dac_top.
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$762:
      Old ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763, B=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][1][0]$a$757
      New ports: A=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [14:0], B={ 2'11 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [8:4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [2] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [2:0] }, Y=$memory\u_sine_wave_generator.sine_LUT$rdmux[0][1][0]$a$757 [14:0]
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][1][0]$a$757 [15] = 1'0
  Optimizing cells in module \sd_dac_top.
Performed a total of 56 changes.

13.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

13.32.6. Executing OPT_DFF pass (perform DFF optimizations).

13.32.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 0 unused cells and 100 unused wires.
<suppressed ~1 debug messages>

13.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.32.9. Rerunning OPT passes. (Maybe there is more to do..)

13.32.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

13.32.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
    Consolidated identical input bits for $mux cell $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][9]$825:
      Old ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] 4'1001 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] }, B={ 2'11 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] 1'0 }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [11:9] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [2:0] }
      New ports: A={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] 4'1001 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] }, B={ 3'110 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4] 1'0 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] 1'1 $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [12] 1'0 }, Y={ $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [11:10] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [7] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [12] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [4] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [13] $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [2:0] }
      New connections: $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][4]$b$788 [9] = $memory\u_sine_wave_generator.sine_LUT$rdmux[0][4][0]$b$800 [4]
  Optimizing cells in module \sd_dac_top.
Performed a total of 1 changes.

13.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.32.13. Executing OPT_DFF pass (perform DFF optimizations).

13.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.32.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.32.16. Rerunning OPT passes. (Maybe there is more to do..)

13.32.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~33 debug messages>

13.32.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.32.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.32.20. Executing OPT_DFF pass (perform DFF optimizations).

13.32.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.32.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.32.23. Finished OPT passes. (There is nothing left to do.)

13.33. Executing TECHMAP pass (map to technology primitives).

13.33.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/techmap.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

13.33.2. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/arith_map.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gatemate_alu'.
Successfully finished Verilog frontend.

13.33.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $lut.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$d5ac72d3c71fb1ea5ae2c661a588e53eacecbc3d\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$f634e570cbc550b94014122ad284ced3e6dbf131\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$c03664515da53280e2d50729ff6f8bcadc230d24\_80_gatemate_alu for cells of type $alu.
Using template $paramod$699b7ece785407a751a0e23016122b3f914491c7\_80_gatemate_alu for cells of type $alu.
Using template $paramod$32c3fa8730d11d365c05e29f277d4dece282f8b5\_80_gatemate_alu for cells of type $alu.
Using template $paramod$d791e00386407db0d296f1a7b88b7da56d4e3847\_80_gatemate_alu for cells of type $alu.
Using template $paramod$531b0e8664cf0177363f10a943e616839f246c95\_80_gatemate_alu for cells of type $alu.
Using template $paramod$d7a150ad86ee1a2dbc4fd9d8439a9e17bdfd86e4\_80_gatemate_alu for cells of type $alu.
Using template $paramod$36198e0b36db76029c2cdb9538a380f9ff1cdd82\_80_gatemate_alu for cells of type $alu.
Using template $paramod$4c366e5d08a0fd39206068e100e615550145957f\_80_gatemate_alu for cells of type $alu.
Using template $paramod$ae7d023437677bbebca38c51a21bd185603f8f03\_80_gatemate_alu for cells of type $alu.
Using template $paramod$b3281d5284dce60e3ac7a1bd7301e0c5482d22f7\_80_gatemate_alu for cells of type $alu.
Using template $paramod$1b4c9a53024b5ca87845e46c8a70193b5f2d181d\_80_gatemate_alu for cells of type $alu.
Using template $paramod$5df7330fa9d59d512dcf6c936b8ce262e9d0e8e4\_80_gatemate_alu for cells of type $alu.
Using template $paramod$ddf771ff7dcd8a715b0f6e3577284b2a2a1dc062\_80_gatemate_alu for cells of type $alu.
Using template $paramod$dcad46f6575129c3d679532ae75469e1bf161cc0\_80_gatemate_alu for cells of type $alu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_gatemate_alu for cells of type $alu.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~959 debug messages>

13.34. Executing OPT pass (performing simple optimizations).

13.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.
<suppressed ~1160 debug messages>

13.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
<suppressed ~822 debug messages>
Removed a total of 274 cells.

13.34.3. Executing OPT_DFF pass (perform DFF optimizations).

13.34.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 1006 unused cells and 589 unused wires.
<suppressed ~1007 debug messages>

13.34.5. Finished fast OPT passes.

13.35. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port sd_dac_top.clk using CC_IBUF.
Mapping port sd_dac_top.output_pdm using CC_OBUF.
Mapping port sd_dac_top.reset using CC_IBUF.
Removed 0 unused cells and 2 unused wires.

13.36. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.37. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

13.38. Executing TECHMAP pass (map to technology primitives).

13.38.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/reg_map.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/reg_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFFE_xxxx_'.
Generating RTLIL representation for module `\$_DLATCH_xxx_'.
Successfully finished Verilog frontend.

13.38.2. Continuing TECHMAP pass.
Using template $paramod$0ea0c0ecb89aa8a394fc59f557ec4597a0d47f80\$_DFFE_xxxx_ for cells of type $_DFFE_PP0P_.
Using template $paramod$335f7dd81cc645e1571d5f6da654e3a21aeae03a\$_DFFE_xxxx_ for cells of type $_DFFE_PP0N_.
No more expansions possible.
<suppressed ~833 debug messages>

13.39. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.
<suppressed ~33 debug messages>

13.40. Executing SIMPLEMAP pass (map simple cells to gate primitives).

13.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 0 unused cells and 4689 unused wires.
<suppressed ~1 debug messages>

13.42. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module sd_dac_top..
  Treeifying 497 MUXes:
    Found tree with 1 MUXes at root $flatten\u_clk_divider.$0\counter[6:0] [0].
    Found tree with 1 MUXes at root $flatten\u_clk_divider.$0\counter[6:0] [1].
    Found tree with 1 MUXes at root $flatten\u_clk_divider.$0\counter[6:0] [2].
    Found tree with 1 MUXes at root $flatten\u_clk_divider.$0\counter[6:0] [3].
    Found tree with 1 MUXes at root $flatten\u_clk_divider.$0\counter[6:0] [4].
    Found tree with 1 MUXes at root $flatten\u_clk_divider.$0\counter[6:0] [5].
    Found tree with 1 MUXes at root $flatten\u_clk_divider.$0\counter[6:0] [6].
    Found tree with 1 MUXes at root $flatten\u_sine_wave_generator.$0\index[5:0] [0].
    Found tree with 1 MUXes at root $flatten\u_sine_wave_generator.$0\index[5:0] [1].
    Found tree with 1 MUXes at root $flatten\u_sine_wave_generator.$0\index[5:0] [2].
    Found tree with 1 MUXes at root $flatten\u_sine_wave_generator.$0\index[5:0] [3].
    Found tree with 1 MUXes at root $flatten\u_sine_wave_generator.$0\index[5:0] [4].
    Found tree with 1 MUXes at root $flatten\u_sine_wave_generator.$0\index[5:0] [5].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [8].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [10].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [0].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [1].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [2].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [3].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [4].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [5].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [6].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [7].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [8].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [9].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [10].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [11].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [12].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [13].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [14].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter7.output_typeconvert [15].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter7.$0\cur_count[1:0] [0].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter7.$0\cur_count[1:0] [1].
    Found tree with 1 MUXes at root $techmap635$flatten\u_interpolatingFilter.\filter6.$ge$../1.hw/cic3.v:110$207.Y.
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [0].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [1].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [2].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [3].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [4].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [5].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [6].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [7].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [8].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [9].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [10].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [11].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [12].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [13].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [14].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [15].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter6.output_typeconvert [16].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter6.$procmux$517_Y [0].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter6.$procmux$517_Y [1].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [0].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [1].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [2].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [3].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [4].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [5].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [6].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [7].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [8].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [9].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [10].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [11].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [12].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [13].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [14].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [15].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [16].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [17].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [18].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [19].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [20].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [21].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [22].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [23].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [24].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [25].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [26].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [27].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [28].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [29].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [30].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [31].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [32].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [33].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [34].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [35].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter5.sum2 [36].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [0].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [1].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [2].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [3].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [4].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [5].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [6].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [7].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [8].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [9].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [10].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [11].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [12].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [13].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [14].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [15].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [16].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter5.output_typeconvert [17].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter5.$procmux$506_Y [0].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter5.$procmux$506_Y [1].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [0].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [1].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [2].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [3].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [4].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [5].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [6].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [7].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [8].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [9].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [10].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [11].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [12].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [13].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [14].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [15].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [16].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [17].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [18].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [19].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [20].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [21].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [22].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [23].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [24].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [25].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [26].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [27].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [28].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [29].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [30].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [31].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [32].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [33].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [34].
    Found tree with 1 MUXes at root \u_interpolatingFilter.filter4.sum2 [35].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [0].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [1].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [2].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [3].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [4].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [5].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [6].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [7].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [8].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [9].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [10].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [11].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [12].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [13].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [14].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [15].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [16].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [17].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter4.output_typeconvert [18].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter4.$procmux$489_Y [0].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter4.$procmux$489_Y [1].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [0].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [1].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [2].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [3].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [4].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [5].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [6].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [7].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [8].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [9].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [10].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [11].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [12].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [13].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [14].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [15].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [16].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [17].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [18].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [19].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [20].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [21].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [22].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [23].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [24].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [25].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [26].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [27].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [28].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [29].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [30].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [31].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [32].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [33].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [34].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [35].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [36].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [37].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.sum3 [38].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [0].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [1].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [2].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [3].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [4].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [5].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [6].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [7].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [8].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [9].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [10].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [11].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [12].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [13].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [14].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [15].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [16].
    Found tree with 2 MUXes at root \u_interpolatingFilter.filter3.output_typeconvert [17].
    Found tree with 9 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [0].
    Found tree with 10 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [1].
    Found tree with 9 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [2].
    Found tree with 7 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [3].
    Found tree with 9 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [4].
    Found tree with 7 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [5].
    Found tree with 9 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [6].
    Found tree with 9 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [7].
    Found tree with 8 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [8].
    Found tree with 8 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [9].
    Found tree with 8 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [10].
    Found tree with 7 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [11].
    Found tree with 8 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [12].
    Found tree with 5 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [13].
    Found tree with 7 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [14].
    Found tree with 3 MUXes at root $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [15].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter3.$procmux$472_Y [0].
    Found tree with 1 MUXes at root $flatten\u_interpolatingFilter.\filter3.$procmux$472_Y [1].
    Found tree with 1 MUXes at root $techmap634$flatten\u_interpolatingFilter.\filter7.$ge$../1.hw/cic4.v:110$168.Y.
    Found tree with 1 MUXes at root $techmap636$flatten\u_interpolatingFilter.\filter5.$ge$../1.hw/cic2.v:120$246.Y.
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767 [13].
    Found tree with 1 MUXes at root $techmap637$flatten\u_interpolatingFilter.\filter4.$ge$../1.hw/cic1.v:120$305.Y.
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [3].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [4].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [9].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [13].
    Found tree with 1 MUXes at root $techmap638$flatten\u_interpolatingFilter.\filter3.$ge$../1.hw/inverseSinc.v:139$364.Y.
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [0].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [3].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [5].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [8].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [11].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [8].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [11].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [12].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [4].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [5].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [9].
    Found tree with 1 MUXes at root $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [14].
    Finished treeification: Found 263 trees.
  Covering trees:
    Replaced tree at $flatten\u_clk_divider.$0\counter[6:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_clk_divider.$0\counter[6:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_clk_divider.$0\counter[6:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_clk_divider.$0\counter[6:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_clk_divider.$0\counter[6:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_clk_divider.$0\counter[6:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_clk_divider.$0\counter[6:0] [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_sine_wave_generator.$0\index[5:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_sine_wave_generator.$0\index[5:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_sine_wave_generator.$0\index[5:0] [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_sine_wave_generator.$0\index[5:0] [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_sine_wave_generator.$0\index[5:0] [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_sine_wave_generator.$0\index[5:0] [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][3][0]$b$776 [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [6]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [7]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [8]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [9]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [10]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [11]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [12]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [13]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [14]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter7.output_typeconvert [15]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter7.$0\cur_count[1:0] [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter7.$0\cur_count[1:0] [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap635$flatten\u_interpolatingFilter.\filter6.$ge$../1.hw/cic3.v:110$207.Y: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [6]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [7]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [8]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [9]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [10]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [11]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [12]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [13]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [14]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [15]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter6.output_typeconvert [16]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter6.$procmux$517_Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter6.$procmux$517_Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [17]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [18]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [19]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [20]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [21]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [22]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [23]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [24]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [25]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [26]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [27]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [28]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [29]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [30]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [31]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [32]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [33]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [34]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [35]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.sum2 [36]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [6]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [7]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [8]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [9]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [10]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [11]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [12]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [13]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [14]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [15]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [16]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter5.output_typeconvert [17]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter5.$procmux$506_Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter5.$procmux$506_Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [10]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [15]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [16]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [17]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [18]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [19]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [20]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [21]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [22]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [23]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [24]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [25]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [26]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [27]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [28]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [29]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [30]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [31]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [32]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [33]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [34]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.sum2 [35]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [6]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [7]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [8]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [9]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [10]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [11]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [12]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [13]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [14]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [15]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [16]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [17]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter4.output_typeconvert [18]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter4.$procmux$489_Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter4.$procmux$489_Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [6]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [7]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [8]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [9]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [10]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [11]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [12]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [13]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [14]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [15]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [16]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [17]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [18]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [19]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [20]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [21]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [22]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [23]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [24]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [25]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [26]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [27]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [28]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [29]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [30]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [31]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [32]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [33]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [34]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [35]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [36]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [37]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.sum3 [38]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [4]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [5]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [6]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [7]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [8]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [9]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [10]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [11]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [12]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [13]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [14]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [15]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [16]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \u_interpolatingFilter.filter3.output_typeconvert [17]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [0]: 3 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [1]: 1 MUX2, 3 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [2]: 3 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [3]: 4 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [4]: 3 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [5]: 4 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [6]: 3 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [7]: 3 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [8]: 2 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [9]: 5 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [10]: 2 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [11]: 4 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [12]: 5 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [13]: 2 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [14]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $\u_sine_wave_generator.sine_LUT$rdreg[0]$d [15]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter3.$procmux$472_Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\u_interpolatingFilter.\filter3.$procmux$472_Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap634$flatten\u_interpolatingFilter.\filter7.$ge$../1.hw/cic4.v:110$168.Y: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap636$flatten\u_interpolatingFilter.\filter5.$ge$../1.hw/cic2.v:120$246.Y: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$b$767 [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap637$flatten\u_interpolatingFilter.\filter4.$ge$../1.hw/cic1.v:120$305.Y: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][1]$a$766 [13]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $techmap638$flatten\u_interpolatingFilter.\filter3.$ge$../1.hw/inverseSinc.v:139$364.Y: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$b$764 [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [8]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [11]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][0]$a$763 [12]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [9]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $memory\u_sine_wave_generator.sine_LUT$rdmux[0][2][2]$b$770 [14]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
  Added a total of 1 decoder MUXes.
<suppressed ~8672 debug messages>

13.43. Executing OPT pass (performing simple optimizations).

13.43.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.
<suppressed ~233 debug messages>

13.43.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

13.43.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

13.43.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.43.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.43.6. Executing OPT_SHARE pass.

13.43.7. Executing OPT_DFF pass (perform DFF optimizations).

13.43.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

13.43.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.43.10. Rerunning OPT passes. (Maybe there is more to do..)

13.43.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \sd_dac_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

13.43.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \sd_dac_top.
Performed a total of 0 changes.

13.43.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\sd_dac_top'.
Removed a total of 0 cells.

13.43.14. Executing OPT_SHARE pass.

13.43.15. Executing OPT_DFF pass (perform DFF optimizations).

13.43.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..

13.43.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module sd_dac_top.

13.43.18. Finished OPT passes. (There is nothing left to do.)

13.44. Executing TECHMAP pass (map to technology primitives).

13.44.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/mux_map.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/mux_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX8_'.
Generating RTLIL representation for module `\$_MUX4_'.
Successfully finished Verilog frontend.

13.44.2. Continuing TECHMAP pass.
Using template \$_MUX4_ for cells of type $_MUX4_.
No more expansions possible.
<suppressed ~29 debug messages>

13.45. Executing ABC pass (technology mapping using ABC).

13.45.1. Extracting gate netlist of module `\sd_dac_top' to `<abc-temp-dir>/input.blif'..
Extracted 959 gates and 1242 wires to a netlist network with 281 inputs and 280 outputs.

13.45.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress <abc-temp-dir>/input.blif 
ABC: Total number of equiv classes                =     294.
ABC: Participating nodes from both networks       =     750.
ABC: Participating nodes from the first network   =     316. (  90.80 % of nodes)
ABC: Participating nodes from the second network  =     434. ( 124.71 % of nodes)
ABC: Node pairs (any polarity)                    =     313. (  89.94 % of names can be moved)
ABC: Node pairs (same polarity)                   =     290. (  83.33 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

13.45.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      342
ABC RESULTS:        internal signals:      681
ABC RESULTS:           input signals:      281
ABC RESULTS:          output signals:      280
Removing temp directory.
Removed 0 unused cells and 1054 unused wires.

13.46. Executing TECHMAP pass (map to technology primitives).

13.46.1. Executing Verilog-2005 frontend: /home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/lut_map.v
Parsing Verilog input from `/home/ahmed/Desktop/cc-toolchain-linux/bin/yosys/share/gatemate/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

13.46.2. Continuing TECHMAP pass.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$9282d17b21f721dfcb667032dcbe6415b3a1785e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$ffb5bd8ac626eda1cc3e9ebac1f7d90cd23e95fe\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$cdbb3434c58d35072833e3be994fccdfd36cb5aa\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$7ee0028c4374eebfc180a68ee762b314b03436b0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$41e77f19dd402023b2f8f068415e2d86d2842fad\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$10cf713b4186bc18302043b90ad995f32fe0efd7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$c2d0b147a3d6a49612f278730b301b370e2c932d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$2383eca32661e7dc1f3fd80ce2a036eb11b2f26d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod$a2f48cddffed1a227e0f8e4aff799552ea81663c\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod$5db8b17ef4c7b2abc86a43641aaf5de0f4c04648\$lut for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$cc17f69fb11947b361a9c54ee804bdae735865c7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$d876dceee20d29e2d29db8a6ae4ad565f4204347\$lut for cells of type $lut.
Using template $paramod$9a7442ed04e04c47d82eb0315f7c6ad92055cdd0\$lut for cells of type $lut.
Using template $paramod$789c78f196b745ac8416d4350180b8715831126b\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~938 debug messages>
Removed 0 unused cells and 576 unused wires.

13.47. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting CC_BUFG on sd_dac_top.clk0[0].
Inserting CC_BUFG on sd_dac_top.u_clk_divider.clk_out[0].

13.48. Executing HIERARCHY pass (managing design hierarchy).

13.48.1. Analyzing design hierarchy..
Top module:  \sd_dac_top

13.48.2. Analyzing design hierarchy..
Top module:  \sd_dac_top
Removed 0 unused modules.

13.49. Printing statistics.

=== sd_dac_top ===

   Number of wires:                356
   Number of wire bits:           5595
   Number of public wires:         192
   Number of public wire bits:    3775
   Number of ports:                  3
   Number of port bits:              3
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1738
     $scopeinfo                      9
     CC_ADDF                       629
     CC_BUFG                         2
     CC_DFF                        781
     CC_IBUF                         2
     CC_LUT1                        20
     CC_LUT2                        44
     CC_LUT3                       138
     CC_LUT4                        70
     CC_MULT                        16
     CC_MX4                         25
     CC_OBUF                         1
     CC_PLL                          1

13.50. Executing CHECK pass (checking for obvious problems).
Checking module sd_dac_top...
Found and reported 0 problems.

13.51. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \sd_dac_top..
Removed 9 unused cells and 93 unused wires.
<suppressed ~102 debug messages>

13.52. Executing Verilog backend.

13.52.1. Executing BMUXMAP pass.

13.52.2. Executing DEMUXMAP pass.
Dumping module `\sd_dac_top'.

Warnings: 12 unique messages, 12 total
End of script. Logfile hash: 8638176510, CPU: user 0.88s system 2.60s, MEM: 37.26 MB peak
Yosys 0.42+15 (git sha1 74a1dd99a, g++ 14.1.1 -Os)
Time spent: 25% 24x opt_clean (0 sec), 17% 24x opt_expr (0 sec), ...
